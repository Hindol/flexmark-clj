[:document
 {}
 [:paragraph
  {}
  [:text
   {}
   "description: Hyperledger Besu JSON-RPC API methods reference"]]
 [:html-comment-block {}]
 [:heading {:level 1} [:text {} "Hyperledger Besu API Methods"]]
 [:admonition-block
  {:title "", :info "attention"}
  [:bullet-list
   {}
   [:bullet-list-item
    {}
    [:paragraph
     {}
     [:text
      {}
      "All JSON-RPC HTTP examples use the default host and port endpoint "]
     [:code {} [:text {} "http://127.0.0.1:8545"]]
     [:text {} ". If using the "]
     [:link
      {:text "--rpc-http-host",
       :url "CLI/CLI-Syntax.md#rpc-http-host",
       :title ""}
      [:text {} "--rpc-http-host"]]
     [:text {} " or "]
     [:link
      {:text "--rpc-http-port",
       :url "CLI/CLI-Syntax.md#rpc-http-port",
       :title ""}
      [:text {} "--rpc-http-port"]]
     [:soft-line-break {}]
     [:text {} "options, update the endpoint."]]]
   [:bullet-list-item
    {}
    [:paragraph
     {}
     [:text
      {}
      "Except for the examples made on the Ropsten network, the example requests are made against private networks. Depending on network configuration and activity, your example results may be different."]]]]]
 [:paragraph {} [:text {} "{!global/Postman.md!}"]]
 [:heading {:level 2} [:text {} "Admin Methods"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The "]
   [:code {} [:text {} "ADMIN"]]
   [:text
    {}
    " API methods are not enabled by default for JSON-RPC. Use the "]
   [:link
    {:text "`--rpc-http-api`",
     :url "CLI/CLI-Syntax.md#rpc-http-api",
     :title ""}
    [:code {} [:text {} "--rpc-http-api"]]]
   [:soft-line-break {}]
   [:text {} "or "]
   [:link
    {:text "`--rpc-ws-api`",
     :url "CLI/CLI-Syntax.md#rpc-ws-api",
     :title ""}
    [:code {} [:text {} "--rpc-ws-api"]]]
   [:text {} " options to enable the "]
   [:code {} [:text {} "ADMIN"]]
   [:text {} " API methods."]]]
 [:heading {:level 3} [:text {} "admin_addPeer"]]
 [:paragraph
  {}
  [:text {} "Adds a "]
  [:link
   {:text "static node",
    :url "../HowTo/Find-and-Connect/Static-Nodes.md",
    :title ""}
   [:text {} "static node"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "caution"}
  [:paragraph
   {}
   [:text
    {}
    "If connections are timing out, ensure the node ID in the "]
   [:link
    {:text "enode URL",
     :url "../Concepts/Node-Keys.md#enode-url",
     :title ""}
    [:text {} "enode URL"]]
   [:text {} " is correct."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "string"]]
  [:text {} " : "]
  [:link
   {:text "Enode URL",
    :url "../Concepts/Node-Keys.md#enode-url",
    :title ""}
   [:text {} "Enode URL"]]
  [:text {} " of peer to add"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "boolean"]]
  [:text {} " - "]
  [:code {} [:text {} "true"]]
  [:text {} " if peer added or "]
  [:code {} [:text {} "false"]]
  [:text {} " if peer already a "]
  [:link
   {:text "static node",
    :url "../HowTo/Find-and-Connect/Static-Nodes.md",
    :title ""}
   [:text {} "static node"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"admin_addPeer\",\"params\":[\"enode://f59c0ab603377b6ec88b89d5bb41b98fc385030ab1e4b03752db6f7dab364559d92c757c13116ae6408d2d33f0138e7812eb8b696b2a22fe3332c4b5127b22a3@127.0.0.1:30304\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"admin_addPeer\",\"params\":[\"enode://f59c0ab603377b6ec88b89d5bb41b98fc385030ab1e4b03752db6f7dab364559d92c757c13116ae6408d2d33f0138e7812eb8b696b2a22fe3332c4b5127b22a3@127.0.0.1:30304\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": true\n}\n"]]]
 [:heading {:level 3} [:text {} "admin_changeLogLevel"]]
 [:paragraph
  {}
  [:text
   {}
   "Changes the log level without restarting Besu. You can change the log level for all logs, or you can change the log level for specific packages or classes."]]
 [:paragraph
  {}
  [:text {} "Only one log level can be specified per RPC call."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "level"]]
  [:text {} " - "]
  [:link
   {:text "Log level", :url "CLI/CLI-Syntax.md#logging", :title ""}
   [:text {} "Log level"]]]
 [:paragraph
  {}
  [:code {} [:text {} "log_filter"]]
  [:text {} ": "]
  [:code {} [:text {} "Array"]]
  [:text
   {}
   " - Packages or classes to change the log level for. Optional."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "Success"]]
  [:text {} " if the log level has changed; otherwise "]
  [:code {} [:text {} "error"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:text
   {}
   "This example changes the debug level for specified classes to "]
  [:code {} [:text {} "DEBUG"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\":\"admin_changeLogLevel\", \"params\":[\"DEBUG\", [\"tech.pegasys.pantheon.ethereum.eth.manager\",\"tech.pegasys.pantheon.ethereum.p2p.rlpx.connections.netty.ApiHandler\"]], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\", \"method\":\"admin_changeLogLevel\", \"params\":[\"DEBUG\", [\"tech.pegasys.pantheon.ethereum.eth.manager\",\"tech.pegasys.pantheon.ethereum.p2p.rlpx.connections.netty.ApiHandler\"]], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": \"Success\"\n}\n"]]]
 [:paragraph
  {}
  [:text {} "This example changes the debug level of all logs to "]
  [:code {} [:text {} "WARN"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"admin_changeLogLevel\",\"params\":[\"WARN\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"admin_changeLogLevel\",\"params\":[\"WARN\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": \"Success\"\n}\n"]]]
 [:heading {:level 3} [:text {} "admin_generateLogBloomCache"]]
 [:paragraph
  {}
  [:text
   {}
   "Generates cached log bloom indexes for blocks. APIs such as "]
  [:link
   {:text "`eth_getLogs`", :url "#eth_getlogs", :title ""}
   [:code {} [:text {} "eth_getLogs"]]]
  [:soft-line-break {}]
  [:text {} "and "]
  [:link
   {:text "`eth_getFilterLogs`", :url "#eth_getfilterlogs", :title ""}
   [:code {} [:text {} "eth_getFilterLogs"]]]
  [:text {} " use the indexes for improved"]
  [:soft-line-break {}]
  [:text {} "performance."]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text
    {}
    "Each index file contains 100000 blocks. The last fragment of blocks less that 100000 are not indexed."]]]
 [:paragraph
  {}
  [:text
   {}
   "Must be manually executed to add new blocks to the indexes."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "integer"]]
  [:text {} " - Block to start generating indexes"]]
 [:paragraph
  {}
  [:code {} [:text {} "integer"]]
  [:text {} " - Block to stop generating indexes"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "object"]]
  [:text {} " - Log bloom index details:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "quantity"]]
    [:text {} " : "]
    [:code {} [:text {} "startBlock"]]
    [:text
     {}
     " - Starting block for the last requested cache generation"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "quantity"]]
    [:text {} " : "]
    [:code {} [:text {} "endBlock"]]
    [:text
     {}
     " - Ending block for the last requested cache generation"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "quantity"]]
    [:text {} " : "]
    [:code {} [:text {} "currentBlock"]]
    [:text {} " - The most recent block that was added to the cache"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "boolean"]]
    [:text {} " : "]
    [:code {} [:text {} "indexing"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " if indexing is in progress"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "boolean"]]
    [:text {} " : "]
    [:code {} [:text {} "true"]]
    [:text
     {}
     " if the request from this call to generate the cache has"]
    [:soft-line-break {}]
    [:text {} "been accepted"]]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{jsonrpc\":\"2.0\",\"method\":\"admin_generateLogBloomCache\", \"params\":[\"0x0\", \"0x10000\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"admin_generateLogBloomCache\", \"params\":[\"0x0\", \"0x10000\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"startBlock\": \"0x0\",\n    \"endBlock\": \"0x10000\",\n    \"currentBlock\": \"0x0\",\n    \"indexing\": true,\n    \"requestAccepted\": true\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "admin_nodeInfo"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns networking information about the node. The information includes general information about the node"]
  [:soft-line-break {}]
  [:text
   {}
   "and specific information from each running Ethereum sub-protocol (for example, "]
  [:code {} [:text {} "eth"]]
  [:text {} ")."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : Node object"]]
 [:paragraph {} [:text {} "Properties of the node object are:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "enode"]]
    [:text {} " - "]
    [:link
     {:text "Enode URL",
      :url "../Concepts/Node-Keys.md#enode-url",
      :title ""}
     [:text {} "Enode URL"]]
    [:text {} " for the node"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "listenAddr"]]
    [:text {} " - Host and port for the node"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "name"]]
    [:text {} " - Client name"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "id"]]
    [:text {} " - "]
    [:link
     {:text "Node public key",
      :url "../Concepts/Node-Keys.md#node-public-key",
      :title ""}
     [:text {} "Node public key"]]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "ports"]]
    [:text {} " - Peer discovery and listening "]
    [:link
     {:text "ports",
      :url
      "../HowTo/Find-and-Connect/Managing-Peers.md#port-configuration",
      :title ""}
     [:text {} "ports"]]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "protocols"]]
    [:text
     {}
     " - List of objects containing information for each Ethereum sub-protocol"]]]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "If the node is running locally, the host of the "]
   [:code {} [:text {} "enode"]]
   [:text {} " and "]
   [:code {} [:text {} "listenAddr"]]
   [:text {} " are displayed as "]
   [:code {} [:text {} "[::]"]]
   [:text {} " in the result."]
   [:soft-line-break {}]
   [:text {} "If "]
   [:link
    {:text "UPnP",
     :url "../HowTo/Find-and-Connect/Using-UPnP.md",
     :title ""}
    [:text {} "UPnP"]]
   [:text {} " is enabled, the external address is"]
   [:soft-line-break {}]
   [:text {} "displayed for the "]
   [:code {} [:text {} "enode"]]
   [:text {} " and "]
   [:code {} [:text {} "listenAddr"]]
   [:text {} "."]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"admin_nodeInfo\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"admin_nodeInfo\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"enode\": \"enode://87ec35d558352cc55cd1bf6a472557797f91287b78fe5e86760219124563450ad1bb807e4cc61e86c574189a851733227155551a14b9d0e1f62c5e11332a18a3@[::]:30303\",\n        \"listenAddr\": \"[::]:30303\",\n        \"name\": \"besu/v1.0.1-dev-0d2294a5/osx-x86_64/oracle-java-1.8\",\n        \"id\": \"87ec35d558352cc55cd1bf6a472557797f91287b78fe5e86760219124563450ad1bb807e4cc61e86c574189a851733227155551a14b9d0e1f62c5e11332a18a3\",\n        \"ports\": {\n            \"discovery\": 30303,\n            \"listener\": 30303\n        },\n        \"protocols\": {\n            \"eth\": {\n                \"config\": {\n                    \"chainId\": 2018,\n                    \"homesteadBlock\": 0,\n                    \"daoForkBlock\": 0,\n                    \"daoForkSupport\": true,\n                    \"eip150Block\": 0,\n                    \"eip155Block\": 0,\n                    \"eip158Block\": 0,\n                    \"byzantiumBlock\": 0,\n                    \"constantinopleBlock\": 0,\n                    \"constantinopleFixBlock\": 0,\n                    \"ethash\": {\n                        \"fixeddifficulty\": 100\n                    }\n                },\n                \"difficulty\": 78536,\n                \"genesis\": \"0x43ee12d45470e57c86a0dfe008a5b847af9e372d05e8ba8f01434526eb2bea0f\",\n                \"head\": \"0xc6677651f16d07ae59cab3a5e1f0b814ed2ec27c00a93297b2aa2e29707844d9\",\n                \"network\": 2018\n            }\n        }\n    }\n}\n"]]]
 [:heading {:level 3} [:text {} "admin_peers"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns networking information about connected remote nodes."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "array"]]
  [:text {} " of "]
  [:emphasis {} [:text {} "objects"]]
  [:text {} " - Object returned for each remote node."]]
 [:paragraph {} [:text {} "Properties of the remote node object are:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "version"]]
    [:text {} " - P2P protocol version"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "name"]]
    [:text {} " - Client name"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "caps"]]
    [:text {} " - List of Ethereum sub-protocol capabilities"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "network"]]
    [:text
     {}
     " - Local and remote addresses established at time of bonding with the peer. The remote address may not"]
    [:soft-line-break {}]
    [:text {} "match the hex value for "]
    [:code {} [:text {} "port"]]
    [:text
     {}
     ". The remote address depends on which node initiated the connection."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "port"]]
    [:text
     {}
     " - Port on the remote node on which P2P peer discovery is listening"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "id"]]
    [:text {} " - Node public key. Excluding the "]
    [:code {} [:text {} "0x"]]
    [:text
     {}
     " prefix, the node public key is the ID in the enode URL "]
    [:code {} [:text {} "enode://<id ex 0x>@<host>:<port>"]]
    [:text {} "."]]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"admin_peers\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"admin_peers\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : [\n    {\n      \"version\": \"0x5\",\n      \"name\": \"Parity-Ethereum/v2.3.0-nightly-1c2e121-20181116/x86_64-linux-gnu/rustc1.30.0\",\n      \"caps\": [\n         \"eth/62\",\n         \"eth/63\",\n         \"par/1\",\n         \"par/2\",\n         \"par/3\",\n         \"pip/1\"\n      ],\n       \"network\": {\n          \"localAddress\": \"192.168.1.229:50115\",\n          \"remoteAddress\": \"168.61.153.255:40303\"\n       },\n       \"port\": \"0x9d6f\",\n       \"id\": \"0xea26ccaf0867771ba1fec32b3589c0169910cb4917017dba940efbef1d2515ce864f93a9abc846696ebad40c81de7c74d7b2b46794a71de8f95a0d019f494ff3\"\n    }\n  ]\n}\n"]]]
 [:heading {:level 3} [:text {} "admin_removePeer"]]
 [:paragraph
  {}
  [:text {} "Removes a "]
  [:link
   {:text "static node",
    :url "../HowTo/Find-and-Connect/Static-Nodes.md",
    :title ""}
   [:text {} "static node"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "string"]]
  [:text {} " : "]
  [:link
   {:text "Enode URL",
    :url "../Concepts/Node-Keys.md#enode-url",
    :title ""}
   [:text {} "Enode URL"]]
  [:text {} " of peer to remove"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "boolean"]]
  [:text {} " - "]
  [:code {} [:text {} "true"]]
  [:text {} " if peer removed or "]
  [:code {} [:text {} "false"]]
  [:text {} " if peer not a "]
  [:link
   {:text "static node",
    :url "../HowTo/Find-and-Connect/Static-Nodes.md",
    :title ""}
   [:text {} "static node"]]
  [:text {} ")."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"admin_removePeer\",\"params\":[\"enode://f59c0ab603377b6ec88b89d5bb41b98fc385030ab1e4b03752db6f7dab364559d92c757c13116ae6408d2d33f0138e7812eb8b696b2a22fe3332c4b5127b22a3@127.0.0.1:30304\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"admin_removePeer\",\"params\":[\"enode://f59c0ab603377b6ec88b89d5bb41b98fc385030ab1e4b03752db6f7dab364559d92c757c13116ae6408d2d33f0138e7812eb8b696b2a22fe3332c4b5127b22a3@127.0.0.1:30304\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": true\n}\n"]]]
 [:heading {:level 2} [:text {} "Web3 Methods"]]
 [:heading {:level 3} [:text {} "web3_clientVersion"]]
 [:paragraph {} [:text {} "Returns the current client version."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "string"]]
  [:text {} " - Current client version."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"web3_clientVersion\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : \"besu/<version>\"\n}\n"]]]
 [:heading {:level 3} [:text {} "web3_sha3"]]
 [:paragraph
  {}
  [:text {} "Returns a "]
  [:link
   {:text "SHA3",
    :url "https://en.wikipedia.org/wiki/SHA-3",
    :title ""}
   [:text {} "SHA3"]]
  [:text {} " hash of the specified data. The result value is a "]
  [:link
   {:text "Keccak-256",
    :url "https://keccak.team/keccak.html",
    :title ""}
   [:text {} "Keccak-256"]]
  [:text {} " hash, not the standardized SHA3-256."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text {} " - Data to convert to a SHA3 hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " ("]
  [:emphasis {} [:text {} "DATA"]]
  [:text {} ") - SHA3 result of the input data."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"web3_sha3\",\"params\":[\"0x68656c6c6f20776f726c00\"],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"web3_sha3\",\"params\":[\"0x68656c6c6f20776f726c00\"],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : \"0x5e39a0a66544c0668bde22d61c47a8710000ece931f13b84d3b2feb44ec96d3f\"\n}\n"]]]
 [:heading {:level 2} [:text {} "Net Methods"]]
 [:heading {:level 3} [:text {} "net_version"]]
 [:paragraph {} [:text {} "Returns the current chain ID."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "string"]]
  [:text {} " - Current chain ID."]]
 [:paragraph
  {}
  [:text {} "| Chain ID | Chain | Network | Description"]
  [:soft-line-break {}]
  [:text
   {}
   "|----------|-------|---------|-------------------------------|"]
  [:soft-line-break {}]
  [:text {} "| "]
  [:code {} [:text {} "1"]]
  [:text
   {}
   "      | ETH   | MainNet | Main Ethereum network         |"]
  [:soft-line-break {}]
  [:text {} "| "]
  [:code {} [:text {} "3"]]
  [:text
   {}
   "      | ETH   | Ropsten | PoW test network              |"]
  [:soft-line-break {}]
  [:text {} "| "]
  [:code {} [:text {} "4"]]
  [:text
   {}
   "      | ETH   | Rinkeby | PoA test network using Clique |"]
  [:soft-line-break {}]
  [:text {} "| "]
  [:code {} [:text {} "5"]]
  [:text
   {}
   "      | ETH   | Goerli  | PoA test network using Clique |"]
  [:soft-line-break {}]
  [:text {} "| "]
  [:code {} [:text {} "6"]]
  [:text
   {}
   "      | ETC   | Kotti   | PoA test network using Clique |"]
  [:soft-line-break {}]
  [:text {} "| "]
  [:code {} [:text {} "61"]]
  [:text {} "     | ETC   | Classic | Main Ethereum Classic network |"]
  [:soft-line-break {}]
  [:text {} "| "]
  [:code {} [:text {} "63"]]
  [:text {} "     | ETC   | Mordor  | PoW test network              |"]
  [:soft-line-break {}]
  [:text {} "| "]
  [:code {} [:text {} "2018"]]
  [:text {} "   | ETH   | Dev     | PoW development network       |"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 51,\n  \"result\" : \"1\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : \"3\"\n}\n"]]]
 [:heading {:level 3} [:text {} "net_listening"]]
 [:paragraph
  {}
  [:text
   {}
   "Indicates whether the client is actively listening for network connections."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " ("]
  [:emphasis {} [:text {} "BOOLEAN"]]
  [:text {} ") - "]
  [:code {} [:text {} "true"]]
  [:text
   {}
   " if the client is actively listening for network connections; otherwise "]
  [:code {} [:text {} "false"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_listening\",\"params\":[],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"net_listening\",\"params\":[],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : true\n}\n"]]]
 [:heading {:level 3} [:text {} "net_peerCount"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the number of peers currently connected to the client."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "integer"]]
  [:text {} " - Number of connected peers in hexadecimal."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\":[],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"net_peerCount\",\"params\":[],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : \"0x5\"\n}\n"]]]
 [:heading {:level 3} [:text {} "net_enode"]]
 [:paragraph
  {}
  [:text {} "Returns the "]
  [:link
   {:text "enode URL",
    :url "../Concepts/Node-Keys.md#enode-url",
    :title ""}
   [:text {} "enode URL"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "string"]]
  [:text {} " - "]
  [:link
   {:text "Enode URL",
    :url "../Concepts/Node-Keys.md#enode-url",
    :title ""}
   [:text {} "Enode URL"]]
  [:text {} " for the node"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_enode\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"net_enode\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : \"enode://6a63160d0ccef5e4986d270937c6c8d60a9a4d3b25471cda960900d037c61988ea14da67f69dbfb3497c465d0de1f001bb95598f74b68a39a5156a608c42fa1b@127.0.0.1:30303\"\n}\n"]]]
 [:heading {:level 3} [:text {} "net_services"]]
 [:paragraph
  {}
  [:text {} "Returns enabled services (for example, "]
  [:code {} [:text {} "jsonrpc"]]
  [:text {} ") and the host and port for each service."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "objects"]]
  [:text {} " - Enabled services"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_services\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"net_services\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"jsonrpc\": {\n            \"host\": \"127.0.0.1\",\n            \"port\": \"8545\"\n        },\n        \"p2p\" : {\n            \"host\" : \"127.0.0.1\",\n            \"port\" : \"30303\"\n        },\n        \"metrics\" : {\n            \"host\": \"127.0.0.1\",\n            \"port\": \"9545\"\n        }\n    }\n}\n"]]]
 [:heading {:level 2} [:text {} "Eth Methods"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "Methods with an equivalent "]
   [:link
    {:text "GraphQL",
     :url "../HowTo/Interact/APIs/GraphQL.md",
     :title ""}
    [:text {} "GraphQL"]]
   [:text
    {}
    " query include a GraphQL request and result in the method example."]
   [:soft-line-break {}]
   [:text
    {}
    "The parameter and result descriptions apply to the JSON-RPC requests. The GraphQL specification is defined in the "]
   [:link
    {:text "schema",
     :url
     "https://github.com/hyperledger/besu/blob/master/ethereum/api/src/main/resources/schema.graphqls",
     :title ""}
    [:text {} "schema"]]
   [:text {} "."]]]
 [:heading {:level 3} [:text {} "eth_syncing"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns an object with data about the synchronization status, or "]
  [:code {} [:text {} "false"]]
  [:text {} " if not synchronizing."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "Object|Boolean"]]
  [:text {} " - Object with synchronization status data or "]
  [:code {} [:text {} "false"]]
  [:text {} ", when not synchronizing:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "startingBlock"]]
    [:text {} " : "]
    [:emphasis {} [:text {} "quantity"]]
    [:text
     {}
     " - Index of the highest block on the blockchain when the network synchronization starts."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "currentBlock"]]
    [:text {} " : "]
    [:emphasis {} [:text {} "quantity"]]
    [:text
     {}
     " - Index of the latest block (also known as the best block) for the current node. This is the same index that "]
    [:link
     {:text "eth_blockNumber", :url "#eth_blocknumber", :title ""}
     [:text {} "eth_blockNumber"]]
    [:text {} " returns."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "highestBlock"]]
    [:text {} ": "]
    [:emphasis {} [:text {} "quantity"]]
    [:text
     {}
     " - Index of the highest known block in the peer network (that is, the highest block so far discovered among peer nodes). This is the same value as "]
    [:code {} [:text {} "currentBlock"]]
    [:text {} " if the current node has no peers."]]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\":[],\"id\":51}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_syncing\",\"params\":[],\"id\":51}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 51,\n  \"result\" : {\n    \"startingBlock\" : \"0x5a0\",\n    \"currentBlock\" : \"0xad9\",\n    \"highestBlock\" : \"0xad9\"\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{syncing{startingBlock currentBlock highestBlock}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  syncing {\n    startingBlock\n    currentBlock\n    highestBlock\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"syncing\" : {\n      \"startingBlock\" : 1592,\n      \"currentBlock\" : 31988,\n      \"highestBlock\" : 4389714\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_chainId"]]
 [:paragraph
  {}
  [:text {} "Returns the "]
  [:link
   {:text "chain ID",
    :url "../Concepts/NetworkID-And-ChainID.md",
    :title ""}
   [:text {} "chain ID"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "quantity"]]
  [:text {} " - Chain ID in hexadecimal."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_chainId\",\"params\":[],\"id\":51}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_chainId\",\"params\":[],\"id\":51}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 51,\n  \"result\" : \"0x7e2\"\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_protocolVersion"]]
 [:paragraph
  {}
  [:text {} "Returns current Ethereum protocol version."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "quantity"]]
  [:text {} " - Ethereum protocol version"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_protocolVersion\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_protocolVersion\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": \"0x3f\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{protocolVersion}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block {} [:text {} "{\n  protocolVersion\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"protocolVersion\" : 63\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_coinbase"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the client coinbase address. The coinbase address is the account to which mining rewards are paid."]]
 [:paragraph
  {}
  [:text {} "To set a coinbase address, start Besu with the "]
  [:code {} [:text {} "--miner-coinbase"]]
  [:text {} " option set to a valid Ethereum account address."]
  [:soft-line-break {}]
  [:text
   {}
   "You can get the Ethereum account address from a client such as MetaMask or Etherscan. For example:"]]
 [:paragraph
  {}
  [:text {} "!!!example"]
  [:soft-line-break {}]
  [:code
   {}
   [:text
    {}
    "bash\nbesu --miner-coinbase=\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\" --rpc-http-enabled\n"]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "data"]]
  [:text {} " - Coinbase address."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_coinbase\",\"params\":[],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_coinbase\",\"params\":[],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\"\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_mining"]]
 [:paragraph
  {}
  [:text
   {}
   "Indicates whether the client is actively mining new blocks. Mining is paused while the client synchronizes with the network regardless of command settings or methods called."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " ("]
  [:emphasis {} [:text {} "BOOLEAN"]]
  [:text {} ") - "]
  [:code {} [:text {} "true"]]
  [:text {} " if the client is actively mining new blocks; otherwise "]
  [:code {} [:text {} "false"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_mining\",\"params\":[],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_mining\",\"params\":[],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : true\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_hashrate"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the number of hashes per second with which the node is mining."]]
 [:paragraph {} [:text {} "Is not supported for GPU mining."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "quantity"]]
  [:text {} " - Number of hashes per second"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_hashrate\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_hashrate\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"0x12b\"\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_gasPrice"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the current gas unit price in wei. It is the hexadecimal equivalent of the price specified for the "]
  [:link
   {:text "`--min-gas-price`",
    :url "CLI/CLI-Syntax.md#min-gas-price",
    :title ""}
   [:code {} [:text {} "--min-gas-price"]]]
  [:text
   {}
   " command line option when the node was started or the default minimum gas price."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "quantity"]]
  [:text
   {}
   " - Current gas unit price in wei as a hexadecimal value."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_gasPrice\",\"params\":[],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_gasPrice\",\"params\":[],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : \"0x3e8\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{gasPrice}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block {} [:text {} "{\n  gasPrice\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"gasPrice\" : \"0x3e8\"\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_accounts"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns a list of account addresses that the client owns."]]
 [:paragraph
  {}
  [:text {} "!!!note"]
  [:soft-line-break {}]
  [:text {} "This method returns an empty object because Besu "]
  [:link
   {:text "doesn't support key management",
    :url "../HowTo/Send-Transactions/Account-Management.md",
    :title ""}
   [:text {} "doesn't support key management"]]
  [:soft-line-break {}]
  [:text {} "inside the client."]]
 [:indented-code-block {}]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "Array of data"]]
  [:text
   {}
   " : List of 20-byte account addresses owned by the client."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_accounts\",\"params\":[],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_accounts\",\"params\":[],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : [ ]\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_blockNumber"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the index corresponding to the block number of the current chain head."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "QUANTITY"]]
  [:text
   {}
   " - Hexadecimal integer representing the index corresponding to the block number of the current chain head."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":51}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"params\":[],\"id\":51}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 51,\n  \"result\" : \"0x2377\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block{number}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text {} "{\n  block {\n    number\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"number\" : 16221\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getBalance"]]
 [:paragraph
  {}
  [:text {} "Returns the account balance of the specified address."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text
   {}
   " - 20-byte account address from which to retrieve the balance."]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY|TAG"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "QUANTITY"]]
  [:text {} " - Current balance in wei as a hexadecimal value."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\":[\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\", \"latest\"],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBalance\",\"params\":[\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\", \"latest\"],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : \"0x1cfe56f3795885980000\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{ account ( address: \\\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\\\") { balance } }\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  account(address: \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\") {\n    balance\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\": {\n    \"account\": {\n      \"balance\": \"0x1ce96a1ffe7620d00000\"\n    }\n  }\n}    \n"]]]
 [:heading {:level 3} [:text {} "eth_getProof"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the account and storage values of the specified account, including the merkle proof."]]
 [:paragraph
  {}
  [:text
   {}
   "The API allows IoT devices or mobile apps which are unable to run light clients to verify responses from untrusted sources, by using a trusted block hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text {} " - 20-byte address of the account or contract."]]
 [:paragraph
  {}
  [:code {} [:text {} "ARRAY"]]
  [:text
   {}
   " - Array of 32-byte storage keys to generate proofs for."]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY|TAG"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ": "]
  [:emphasis {} [:text {} "Object"]]
  [:text {} " - Account details:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "balance"]]
    [:text {} ":"]
    [:code {} [:text {} "Quantity"]]
    [:text {} " - Account balance"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "codeHash"]]
    [:text {} ":"]
    [:code {} [:text {} "Data, 32-byte"]]
    [:text {} " - Hash of the account code"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "nonce"]]
    [:text {} ":"]
    [:code {} [:text {} "Quantity"]]
    [:text {} " - Number of transactions sent from the account"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "storageHash"]]
    [:text {} ":"]
    [:code {} [:text {} "Data, 32-byte"]]
    [:text {} " - SHA3 of the "]
    [:code {} [:text {} "storageRoot"]]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "accountProof"]]
    [:text {} ":"]
    [:code {} [:text {} "Array"]]
    [:text {} " - RLP-encoded merkle tree nodes, starting with the "]
    [:code {} [:text {} "stateRoot"]]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "storageProof"]]
    [:text {} ":"]
    [:code {} [:text {} "Array"]]
    [:text
     {}
     "- Storage entries. Each entry is an object that displays:"]]
   [:bullet-list
    {}
    [:bullet-list-item
     {}
     [:paragraph
      {}
      [:code {} [:text {} "key"]]
      [:text {} ":"]
      [:code {} [:text {} "Quantity"]]
      [:text {} " - Storage key"]]]
    [:bullet-list-item
     {}
     [:paragraph
      {}
      [:code {} [:text {} "value"]]
      [:text {} ":"]
      [:code {} [:text {} "Quantity"]]
      [:text {} " - Storage value"]]]
    [:bullet-list-item
     {}
     [:paragraph
      {}
      [:code {} [:text {} "proof"]]
      [:text {} ":"]
      [:code {} [:text {} "Array"]]
      [:text {} " - RLP-encoded merkle tree nodes, starting with the "]
      [:code {} [:text {} "storageHash"]]]]]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\": \"eth_getProof\",\"params\": [\n\"0a8156e7ee392d885d10eaa86afd0e323afdcd95\", [\"0x0000000000000000000000000000000000000000000000000000000000000347\"], \"latest\"],\"id\": 1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\": \"eth_getProof\",\"params\": [\n\"0a8156e7ee392d885d10eaa86afd0e323afdcd95\", [\"0x0000000000000000000000000000000000000000000000000000000000000347\"], \"latest\"],\"id\": 1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"accountProof\": [\n      \"0xf90211a0...608d898380\",\n      \"0xf90211a0...ec33f19580\",\n      \"0xf901d1a0...9e55584480\",\n      \"0xf8718080...18e5777142\"\n    ],\n    \"address\": \"0x0a8156e7ee392d885d10eaa86afd0e323afdcd95\",\n    \"balance\": \"0x0\",\n    \"codeHash\": \"0x2b6975dcaf69f9bb9a3b30bb6a37b305ce440250bf0dd2f23338cb18e5777142\",\n    \"nonce\": \"0x5f\",\n    \"storageHash\": \"0x917688de43091589aa58c1dfd315105bc9de4478b9ba7471616a4d8a43d46203\",\n    \"storageProof\": [\n      {\n        \"key\": \"0x0000000000000000000000000000000000000000000000000000000000000347\",\n        \"value\": \"0x0\",\n        \"proof\": [\n          \"0xf90211a0...5176779280\",\n          \"0xf901f1a0...c208d86580\",\n          \"0xf8d180a0...1ce6808080\"\n        ]\n      }\n    ]\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getStorageAt"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the value of a storage position at a specified address."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text {} " - A 20-byte storage address."]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY"]]
  [:text {} " - Integer index of the storage position."]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY|TAG"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "DATA"]]
  [:text {} " - The value at the specified storage position."]]
 [:admonition-block
  {:title "", :info "example"}
  [:paragraph
   {}
   [:text
    {}
    "Calculating the correct position depends on the storage you want to retrieve."]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\": \"eth_getStorageAt\",\"params\": [\"0x‭3B3F3E‬\",\"0x0\",\"latest\"],\"id\": 53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\": \"eth_getStorageAt\",\"params\": [\"0x‭3B3F3E‬\",\"0x0\",\"latest\"],\"id\": 53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{account(address: \\\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\\\") {storage(slot: \\\"0x04\\\")}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  account(address: \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\") {\n    storage(slot: \"0x04\")\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"account\" : {\n      \"storage\" : \"0x0000000000000000000000000000000000000000000000000000000000000000\"\n    }\n  }\n}   \n"]]]
 [:heading {:level 3} [:text {} "eth_getTransactionCount"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the number of transactions sent from a specified address. Use the "]
  [:code {} [:text {} "pending"]]
  [:text {} " tag to get the account nonce."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - 20-byte account address."]]
 [:paragraph
  {}
  [:code {} [:text {} "quantity|tag"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "quantity"]]
  [:text
   {}
   " - Integer representing the number of transactions sent from the specified address."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionCount\",\"params\":[\"0xc94770007dda54cF92009BFF0dE90c06F603a09f\",\"latest\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : \"0x1\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{ account (address:\\\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\\\"){transactionCount}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  account(address: \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\") {\n    transactionCount\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"account\" : {\n      \"transactionCount\" : 5\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getBlockTransactionCountByHash"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the number of transactions in the block matching the given block hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - 32-byte block hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "quantity"]]
  [:text
   {}
   " - Integer representing the number of transactions in the specified block."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\":[\"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByHash\",\"params\":[\"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : null\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block(hash:\\\"0xe455c14f757b0b9b67774baad1be1c180a4c1657df52259dbb685bf375408097\\\"){transactionCount}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(hash: \"0xe455c14f757b0b9b67774baad1be1c180a4c1657df52259dbb685bf375408097\") {\n    transactionCount\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"transactionCount\" : 1\n    }\n  }\n}\n"]]]
 [:heading
  {:level 3}
  [:text {} "eth_getBlockTransactionCountByNumber"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the number of transactions in a block matching the specified block number."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY|TAG"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "QUANTITY"]]
  [:text
   {}
   " - Integer representing the number of transactions in the specified block."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\":[\"0xe8\"],\"id\":51}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockTransactionCountByNumber\",\"params\":[\"0xe8\"],\"id\":51}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 51,\n  \"result\" : \"0x8\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block(number:232){transactionCount}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(number: 232) {\n    transactionCount\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"transactionCount\" : 1\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getUncleByBlockHashAndIndex"]]
 [:paragraph
  {}
  [:text {} "Returns uncle specified by block hash and index."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - 32-byte block hash."]]
 [:paragraph
  {}
  [:code {} [:text {} "quantity"]]
  [:text {} " - Index of the uncle."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:link
   {:text "Block object",
    :url "API-Objects.md#block-object",
    :title ""}
   [:text {} "Block object"]]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "Uncles do not contain individual transactions."]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\":[\"0xc48fb64230a82f65a08e7280bd8745e7fea87bc7c206309dee32209fe9a985f7\", \"0x0\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockHashAndIndex\",\"params\":[\"0xc48fb64230a82f65a08e7280bd8745e7fea87bc7c206309dee32209fe9a985f7\", \"0x0\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\":\"2.0\",\n  \"id\":1,\n  \"result\":{\n    \"difficulty\":\"0x76b123df93230\",\n    \"extraData\":\"0x50505945206e616e6f706f6f6c2e6f7267\",\n    \"gasLimit\":\"0x7a121d\",\n    \"gasUsed\":\"0x7a0175\",\n    \"hash\":\"0xc20189c0b1a4a23116ab3b177e929137f6e826f17fc4c2e880e7258c620e9817\",\n    \"logsBloom\":\"0x890086c024487ca422be846a201a10e41bc2882902312116c1119609482031e9c000e2a708004a10281024028020c505727a12570c4810121c59024490b040894406a1c23c37a0094810921da3923600c71c03044b40924280038d07ab91964a008084264a01641380798840805a284cce201a8026045451002500113a00de441001320805ca2840037000111640d090442c11116d2112948084240242340400236ce81502063401dcc214b9105194d050884721c1208800b20501a4201400276004142f118e60808284506979a86e050820101c170c185e2310005205a82a2100382422104182090184800c02489e033440218142140045801c024cc1818485\",\n    \"miner\":\"0x52bc44d5378309ee2abf1539bf71de1b7d7be3b5\",\n    \"mixHash\":\"0xf557cc827e058862aa3ea1bd6088fb8766f70c0eac4117c56cf85b7911f82a14\",\n    \"nonce\":\"0xd320b48904347cdd\",\n    \"number\":\"0x768964\",\n    \"parentHash\":\"0x98d752708b3677df8f439c4529f999b94663d5494dbfc08909656db3c90f6255\",\n    \"receiptsRoot\":\"0x0f838f0ceb73368e7fc8d713a7761e5be31e3b4beafe1a6875a7f275f82da45b\",\n    \"sha3Uncles\":\"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\n    \"size\":\"0x21a\",\n    \"stateRoot\":\"0xa0c7d4fca79810c89c517eff8dadb9c6d6f4bcc27c2edfb301301e1cf7dec642\",\n    \"timestamp\":\"0x5cdcbba6\",\n    \"totalDifficulty\":\"0x229ad33cabd4c40d23d\",\n    \"transactionsRoot\":\"0x866e38e91d01ef0387b8e07ccf35cd910224271ccf2b7477b8c8439e8b70f365\",\n    \"uncles\":[]\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block(hash:\\\"0xc48fb64230a82f65a08e7280bd8745e7fea87bc7c206309dee32209fe9a985f7\\\"){ ommerAt(index: 0) {difficulty extraData gasLimit gasUsed hash logsBloom mixHash nonce number receiptsRoot stateRoot timestamp totalDifficulty transactionsRoot}}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(hash: \"0xc48fb64230a82f65a08e7280bd8745e7fea87bc7c206309dee32209fe9a985f7\") {\n    ommerAt(index: 0) {\n      difficulty\n      extraData\n      gasLimit\n      gasUsed\n      hash\n      logsBloom\n      mixHash\n      nonce\n      number\n      receiptsRoot\n      stateRoot\n      timestamp\n      totalDifficulty\n      transactionsRoot\n    }\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\": {\n    \"block\": {\n      \"difficulty\": \"0x1\",\n      \"extraData\": \"0xf882a00000000000000000000000000000000000000000000000000000000000000000d5949811ebc35d7b06b3fa8dc5809a1f9c52751e1deb808400000000f843b8418e98ef756acdae1e510b1df4b507b7af04eb3802db7fa0f3e73e7d0721b3645e76f4eb3d0dbf0de75620c4405bd5a663247cdd9616482c883053856d857f884a01\",\n      \"gasLimit\": 4700000,\n      \"gasUsed\": 0,\n      \"hash\": \"0x0efe67972b982eb6be5df84e5238eb07475f86afa8a7de708f6a13ac0ff60d6c\",\n      \"logsBloom\": \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n      \"mixHash\": \"0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365\",\n      \"nonce\": \"0x0000000000000000\",\n      \"number\": 200,\n      \"receiptsRoot\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n      \"stateRoot\": \"0xd650578a04b39f50cc979155f4510ec28c2c0a7c1e5fdbf84609bc7b1c430f48\",\n      \"timestamp\": \"0x5cd109fb\",\n      \"totalDifficulty\": \"0xc9\",\n      \"transactionsRoot\": \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\"\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getUncleByBlockNumberAndIndex"]]
 [:paragraph
  {}
  [:text {} "Returns uncle specified by block number and index."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "quantity|tag"]]
  [:text {} " - Index of the block, or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:code {} [:text {} "quantity"]]
  [:text {} " - Index of the uncle."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:link
   {:text "Block object",
    :url "API-Objects.md#block-object",
    :title ""}
   [:text {} "Block object"]]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "Uncles do not contain individual transactions."]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\":[\"0x7689D2\", \"0x0\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleByBlockNumberAndIndex\",\"params\":[\"0x7689D2\", \"0x0\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\":\"2.0\",\n  \"id\":1,\n  \"result\":{\n    \"difficulty\":\"0x77daec467bf93\",\n    \"extraData\":\"0x50505945206e616e6f706f6f6c2e6f7267\",\n    \"gasLimit\":\"0x7a121d\",\n    \"gasUsed\":\"0x7a0f7b\",\n    \"hash\":\"0x42d83ae9c0743f4b1f9c61ff7ea8b164c1bab3627decd49233760680be006ecf\",\n    \"logsBloom\":\"0x888200800000340120220008640200500408006100038400100581c000080240080a0014e8002010080004088040004022402a000c18010001400100002a041141a0610a0052900600041018c0002a0003090020404c00206010010513d00020005380124e08050480710000000108401012b0901c1424006000083a10a8c1040100a0440081050210124400040044304070004001100000012600806008061d0320800000b40042160600002480000000800000c0002100200940801c000820800048024904710000400640490026000a44300309000286088010c2300060003011380006400200812009144042204810209020410a84000410520c08802941\",\n    \"miner\":\"0x52bc44d5378309ee2abf1539bf71de1b7d7be3b5\",\n    \"mixHash\":\"0xf977fcdb52868be410b75ef2becc35cc312f13ab0a6ce400ecd9d445f66fa3f2\",\n    \"nonce\":\"0x628b28403bf1e3d3\",\n    \"number\":\"0x7689d0\",\n    \"parentHash\":\"0xb32cfdfbf4adb05d30f02fcc6fe039cc6666402142954051c1a1cb9cc91aa11e\",\n    \"receiptsRoot\":\"0x9c7c8361d1a24ea2841432234c81974a9920d3eba2b2b1c496b5f925a95cb4ac\",\n    \"sha3Uncles\":\"0x7d972aa1b182b7e93f1db043f03fbdbfac6874fe7e67e162141bcc0aefa6336b\",\n    \"size\":\"0x21a\",\n    \"stateRoot\":\"0x74e97b77813146344d75acb5a52a006cc6dfaca678a10fb8a484a8443e919272\",\n    \"timestamp\":\"0x5cdcc0a7\",\n    \"totalDifficulty\":\"0x229b0583b4bd2698ca0\",\n    \"transactionsRoot\":\"0x1d21626afddf05e5866de66ca3fcd98f1caf5357eba0cc6ec675606e116a891b\",\n    \"uncles\":[]\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block(number:2587){ ommerAt(index: 0) {difficulty extraData gasLimit gasUsed hash logsBloom mixHash nonce number receiptsRoot stateRoot timestamp totalDifficulty transactionsRoot}}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(number: 2587) {\n    ommerAt(index: 0) {\n      difficulty\n      extraData\n      gasLimit\n      gasUsed\n      hash\n      logsBloom\n      mixHash\n      nonce\n      number\n      receiptsRoot\n      stateRoot\n      timestamp\n      totalDifficulty\n      transactionsRoot\n    }\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"ommerAt\" : null\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getUncleCountByBlockHash"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the number of uncles in a block from a block matching the given block hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text {} " - 32-byte block hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "QUANTITY"]]
  [:text
   {}
   " - Integer representing the number of uncles in the specified block."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockHash\",\"params\":[\"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockHash\",\"params\":[\"0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : 0x0\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block(hash:\\\"0x65c08d792e4192b9ece6b6f2390da7da464208b22d88490be8add9373917b426\\\"){ommerCount}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(hash: \"0x65c08d792e4192b9ece6b6f2390da7da464208b22d88490be8add9373917b426\") {\n    ommerCount\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"ommerCount\" : 2\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getUncleCountByBlockNumber"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the number of uncles in a block matching the specified block number."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY|TAG"]]
  [:text
   {}
   " - Integer representing either the index of the block within the blockchain, or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "QUANTITY"]]
  [:text
   {}
   " - Integer representing the number of uncles in the specified block."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\":[\"0xe8\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getUncleCountByBlockNumber\",\"params\":[\"0xe8\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : \"0x1\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block(number:\\\"0x59fd\\\"){ommerCount}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(number: \"0x59fd\") {\n    ommerCount\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"ommerCount\" : 0\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getCode"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the code of the smart contract at the specified address. Compiled smart contract code is stored as a hexadecimal value."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text {} " - 20-byte contract address."]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY|TAG"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "DATA"]]
  [:text {} " - Code stored at the specified address."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\":[\"0xa50a51c09a5c451c52bb714527e1974b686d8e77\", \"latest\"],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getCode\",\"params\":[\"0xa50a51c09a5c451c52bb714527e1974b686d8e77\", \"latest\"],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 53,\n    \"result\": \"0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{\"query\": \"{account(address: \\\"0xa50a51c09a5c451c52bb714527e1974b686d8e77\\\"){ code }}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  account(address: \"0xa50a51c09a5c451c52bb714527e1974b686d8e77\") {\n    code\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"account\" : {\n      \"code\" : \"0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029\"\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_sendRawTransaction"]]
 [:paragraph
  {}
  [:text {} "Sends a "]
  [:link
   {:text "signed transaction",
    :url "../HowTo/Send-Transactions/Transactions.md",
    :title ""}
   [:text {} "signed transaction"]]
  [:text
   {}
   ". A transaction can send ether, deploy a contract, or interact with a contract."]]
 [:paragraph
  {}
  [:text {} "You can interact with contracts using "]
  [:link
   {:text "eth_sendRawTransaction or eth_call",
    :url
    "../HowTo/Send-Transactions/Transactions.md#eth_call-or-eth_sendrawtransaction",
    :title ""}
   [:text {} "eth_sendRawTransaction or eth_call"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:text
   {}
   "To avoid exposing your private key, create signed transactions offline and send the signed transaction data using "]
  [:code {} [:text {} "eth_sendRawTransaction"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:text {} "!!!important"]
  [:soft-line-break {}]
  [:text {} "Besu does not implement "]
  [:link
   {:text "eth_sendTransaction",
    :url "../HowTo/Send-Transactions/Account-Management.md",
    :title ""}
   [:text {} "eth_sendTransaction"]]
  [:text {} "."]]
 [:indented-code-block {}]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text
   {}
   " -  Signed transaction serialized to hexadecimal format. For example:"]]
 [:paragraph
  {}
  [:code
   {}
   [:text
    {}
    "params: [\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"]"]]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:link
    {:text "Creating and Sending Transactions",
     :url "../HowTo/Send-Transactions/Transactions.md",
     :title ""}
    [:text {} "Creating and Sending Transactions"]]
   [:text
    {}
    " includes examples of creating signed transactions using the "]
   [:link
    {:text "web3.js",
     :url "https://github.com/ethereum/web3.js/",
     :title ""}
    [:text {} "web3.js"]]
   [:text {} " library."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - 32-byte transaction hash"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_sendRawTransaction\",\"params\":[\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"id\":1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"mutation {sendRawTransaction(data: \\\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\\\")}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "mutation {\n  sendRawTransaction(data: \"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\")\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"sendRawTransaction\" : \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\"\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_call"]]
 [:paragraph
  {}
  [:text
   {}
   "Invokes a contract function locally and does not change the state of the blockchain."]]
 [:paragraph
  {}
  [:text {} "You can interact with contracts using "]
  [:link
   {:text "eth_sendRawTransaction or eth_call",
    :url
    "../HowTo/Send-Transactions/Transactions.md#eth_call-or-eth_sendrawtransaction",
    :title ""}
   [:text {} "eth_sendRawTransaction or eth_call"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:emphasis {} [:text {} "OBJECT"]]
  [:text {} " - "]
  [:link
   {:text "Transaction call object",
    :url "API-Objects.md#transaction-call-object",
    :title ""}
   [:text {} "Transaction call object"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:emphasis {} [:text {} "QUANTITY|TAG"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " - "]
  [:code {} [:text {} "data"]]
  [:text {} " - Return value of the executed contract."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\":[{\"to\":\"0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13\",\"value\":\"0x1\"}, \"latest\"],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_call\",\"params\":[{\"to\":\"0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13\",\"value\":\"0x1\"}, \"latest\"],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 53,\n    \"result\": \"0x\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block {number call (data : {from : \\\"0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b\\\", to: \\\"0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13\\\", data :\\\"0x12a7b914\\\"}){data status}}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block {\n    number\n    call(data: {from: \"0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b\", to: \"0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13\", data: \"0x12a7b914\"}) {\n      data\n      status\n    }\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"number\" : 17449,\n      \"call\" : {\n        \"data\" : \"0x\",\n        \"status\" : 1\n      }\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_estimateGas"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns an estimate of how much gas is needed for a transaction to complete. The estimation process does not use"]
  [:soft-line-break {}]
  [:text
   {}
   "gas and the transaction is not added to the blockchain. The resulting estimate can be greater than the amount of"]
  [:soft-line-break {}]
  [:text
   {}
   "gas that the transaction actually uses, for various reasons including EVM mechanics and node performance."]]
 [:paragraph
  {}
  [:text {} "The "]
  [:code {} [:text {} "eth_estimateGas"]]
  [:text
   {}
   " call does not send a transaction. You must make a subsequent call to"]
  [:soft-line-break {}]
  [:link
   {:text "eth_sendRawTransaction",
    :url "#eth_sendrawtransaction",
    :title ""}
   [:text {} "eth_sendRawTransaction"]]
  [:text {} " to execute the transaction."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:text
   {}
   "The transaction call object parameters are the same as those for "]
  [:link
   {:text "eth_call", :url "#eth_call", :title ""}
   [:text {} "eth_call"]]
  [:text {} ", except that in "]
  [:code {} [:text {} "eth_estimateGas"]]
  [:text {} ","]
  [:soft-line-break {}]
  [:text
   {}
   "all fields are optional. Setting a gas limit is irrelevant to the estimation process (unlike transactions, in which gas"]
  [:soft-line-break {}]
  [:text {} "limits apply)."]]
 [:paragraph
  {}
  [:emphasis {} [:text {} "OBJECT"]]
  [:text {} " - "]
  [:link
   {:text "Transaction call object",
    :url "API-Objects.md#transaction-call-object",
    :title ""}
   [:text {} "Transaction call object"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "quantity"]]
  [:text {} " -  Amount of gas used."]]
 [:paragraph
  {}
  [:text
   {}
   "The following example returns an estimate of 21000 wei (0x5208) for the transaction."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\":[{\"from\":\"0xFE3B557E8Fb62b89F4916B721be55cEb828dBd73\",\"to\":\"0x44Aa93095D6749A706051658B970b941c72c1D53\",\"value\":\"0x1\"}],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_estimateGas\",\"params\":[{\"from\":\"0xFE3B557E8Fb62b89F4916B721be55cEb828dBd73\",\"to\":\"0x44Aa93095D6749A706051658B970b941c72c1D53\",\"value\":\"0x1\"}],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : \"0x5208\"\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block{estimateGas (data: {from :\\\"0x6295ee1b4f6dd65047762f924ecd367c17eabf8f\\\", to :\\\"0x8888f1f195afa192cfee860698584c030f4c9db1\\\"})}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block {\n    estimateGas(data: {from: \"0x6295ee1b4f6dd65047762f924ecd367c17eabf8f\", to: \"0x8888f1f195afa192cfee860698584c030f4c9db1\"})\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"estimateGas\" : 21000\n    }\n  }\n}   \n"]]]
 [:paragraph
  {}
  [:text
   {}
   "The following example request estimates the cost of deploying a simple storage smart contract to the network. The data field"]
  [:soft-line-break {}]
  [:text
   {}
   "contains the hash of the compiled contract to be deployed. (You can obtain the compiled contract hash from your IDE;"]
  [:soft-line-break {}]
  [:text {} "for example, "]
  [:strong-emphasis
   {}
   [:text {} "Remix > Compile tab > details > WEB3DEPLOY"]]
  [:text {} ".) The result is 113355 wei."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST \\\nhttp://127.0.0.1:8545 \\\n-H 'Content-Type: application/json' \\\n-d '{\n\"jsonrpc\": \"2.0\",\n\"method\": \"eth_estimateGas\",\n\"params\": [{\n\"from\": \"0x8bad598904ec5d93d07e204a366d084a80c7694e\",\n\"data\": \"0x608060405234801561001057600080fd5b5060e38061001f6000396000f3fe6080604052600436106043576000357c0100000000000000000000000000000000000000000000000000000000900480633fa4f24514604857806355241077146070575b600080fd5b348015605357600080fd5b50605a60a7565b6040518082815260200191505060405180910390f35b348015607b57600080fd5b5060a560048036036020811015609057600080fd5b810190808035906020019092919050505060ad565b005b60005481565b806000819055505056fea165627a7a7230582020d7ad478b98b85ca751c924ef66bcebbbd8072b93031073ef35270a4c42f0080029\"\n}],\n\"id\": 1\n}'\n"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n\"jsonrpc\": \"2.0\",\n\"id\": 1,\n\"result\": \"0x1bacb\"\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getBlockByHash"]]
 [:paragraph
  {}
  [:text {} "Returns information about the block by hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text {} " - 32-byte hash of a block."]]
 [:paragraph
  {}
  [:code {} [:text {} "Boolean"]]
  [:text {} " - If "]
  [:code {} [:text {} "true"]]
  [:text {} ", returns the full "]
  [:link
   {:text "transaction objects",
    :url "API-Objects.md#transaction-object",
    :title ""}
   [:text {} "transaction objects"]]
  [:text {} "; if "]
  [:code {} [:text {} "false"]]
  [:text {} ", returns the transaction hashes."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "OBJECT"]]
  [:text {} " - "]
  [:link
   {:text "Block object",
    :url "API-Objects.md#block-object",
    :title ""}
   [:text {} "Block object"]]
  [:text {} " , or "]
  [:code {} [:text {} "null"]]
  [:text {} " when no block is found."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\":[\"0x16b69965a5949262642cfb5e86368ddbbe57ab9f17d999174a65fd0e66580d8f\", false],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByHash\",\"params\":[\"0x16b69965a5949262642cfb5e86368ddbbe57ab9f17d999174a65fd0e66580d8f\", false],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : {\n    \"number\" : \"0x7\",\n    \"hash\" : \"0x16b69965a5949262642cfb5e86368ddbbe57ab9f17d999174a65fd0e66580d8f\",\n    \"parentHash\" : \"0xe9bd4b277983580ef0eabad6011891f8b6aff9381a78bd1c4faca374a48b3e09\",\n    \"nonce\" : \"0x46acb59e85b5bb6d\",\n    \"sha3Uncles\" : \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\n    \"logsBloom\" : \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n    \"transactionsRoot\" : \"0x7aa0913c235f272eb6ed6ab74ba5a057e0a62c1c1d1dbccfd971221e6b6e83a3\",\n    \"stateRoot\" : \"0xfaf6520d6e3d24107a4309855593341ab87a1744dbb6eea4e709b92e9c9107ca\",\n    \"receiptsRoot\" : \"0x056b23fbba480696b65fe5a59b8f2148a1299103c4f57df839233af2cf4ca2d2\",\n    \"miner\" : \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\",\n    \"difficulty\" : \"0x5\",\n    \"totalDifficulty\" : \"0x10023\",\n    \"extraData\" : \"0x\",\n    \"size\" : \"0x270\",\n    \"gasLimit\" : \"0x1000000\",\n    \"gasUsed\" : \"0x5208\",\n    \"timestamp\" : \"0x5bbbe99f\",\n    \"uncles\" : [ ],\n    \"transactions\" : [ \"0x2cc6c94c21685b7e0f8ddabf277a5ccf98db157c62619cde8baea696a74ed18e\" ]\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block (hash : \\\"0xb0efed1fc9326fee967cb2d845d4ebe57c5350a0670c8e86f8052dea6f219f92\\\") {number transactions{hash} timestamp difficulty totalDifficulty gasUsed gasLimit hash nonce ommerCount logsBloom mixHash ommerHash extraData stateRoot receiptsRoot transactionCount transactionsRoot}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(hash: \"0xb0efed1fc9326fee967cb2d845d4ebe57c5350a0670c8e86f8052dea6f219f92\") {\n    number\n    transactions {\n      hash\n    }\n    timestamp\n    difficulty\n    totalDifficulty\n    gasUsed\n    gasLimit\n    hash\n    nonce\n    ommerCount\n    logsBloom\n    mixHash\n    ommerHash\n    extraData\n    stateRoot\n    receiptsRoot\n    transactionCount\n    transactionsRoot\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"number\" : 17607,\n      \"transactions\" : [ ],\n      \"timestamp\" : \"0x5cdbdfb5\",\n      \"difficulty\" : \"0x1\",\n      \"totalDifficulty\" : \"0x44c8\",\n      \"gasUsed\" : 0,\n      \"gasLimit\" : 4700000,\n      \"hash\" : \"0xb0efed1fc9326fee967cb2d845d4ebe57c5350a0670c8e86f8052dea6f219f92\",\n      \"nonce\" : \"0x0000000000000000\",\n      \"ommerCount\" : 0,\n      \"logsBloom\" : \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n      \"mixHash\" : \"0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365\",\n      \"ommerHash\" : \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\n      \"extraData\" : \"0xf882a00000000000000000000000000000000000000000000000000000000000000000d5949811ebc35d7b06b3fa8dc5809a1f9c52751e1deb808400000000f843b841fae6d25da0b91e3e88669d0a765c98479d86d53e9ea1f3fb6b36d7ff22fa622a3da0c49c20e5562c774e90acae8ad487936f6b6019cd8a782db684693cba1e9800\",\n      \"stateRoot\" : \"0xa7086c266aed46cd3bc45579178f8acb36d9d147de575a3ecbf8c7e6f1c737fc\",\n      \"receiptsRoot\" : \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n      \"transactionCount\" : 0,\n      \"transactionsRoot\" : \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\"\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getBlockByNumber"]]
 [:paragraph
  {}
  [:text {} "Returns information about a block by block number."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY|TAG"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:code {} [:text {} "Boolean"]]
  [:text {} " - If "]
  [:code {} [:text {} "true"]]
  [:text {} ", returns the full "]
  [:link
   {:text "transaction objects",
    :url "API-Objects.md#transaction-object",
    :title ""}
   [:text {} "transaction objects"]]
  [:text {} "; if "]
  [:code {} [:text {} "false"]]
  [:text {} ", returns only the hashes of the transactions."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:emphasis {} [:text {} "OBJECT"]]
  [:text {} " - "]
  [:link
   {:text "Block object",
    :url "API-Objects.md#block-object",
    :title ""}
   [:text {} "Block object"]]
  [:text {} " , or "]
  [:code {} [:text {} "null"]]
  [:text {} " when no block is found."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\":[\"0x64\", true],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getBlockByNumber\",\"params\":[\"0x64\", true],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : {\n    \"number\" : \"0x64\",\n    \"hash\" : \"0xdfe2e70d6c116a541101cecbb256d7402d62125f6ddc9b607d49edc989825c64\",\n    \"parentHash\" : \"0xdb10afd3efa45327eb284c83cc925bd9bd7966aea53067c1eebe0724d124ec1e\",\n    \"nonce\" : \"0x37129c7f29a9364b\",\n    \"sha3Uncles\" : \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\n    \"logsBloom\" : \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n    \"transactionsRoot\" : \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n    \"stateRoot\" : \"0x90c25f6d7fddeb31a6cc5668a6bba77adbadec705eb7aa5a51265c2d1e3bb7ac\",\n    \"receiptsRoot\" : \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n    \"miner\" : \"0xbb7b8287f3f0a933474a79eae42cbca977791171\",\n    \"difficulty\" : \"0x42be722b6\",\n    \"totalDifficulty\" : \"0x19b5afdc486\",\n    \"extraData\" : \"0x476574682f4c5649562f76312e302e302f6c696e75782f676f312e342e32\",\n    \"size\" : \"0x21e\",\n    \"gasLimit\" : \"0x1388\",\n    \"gasUsed\" : \"0x0\",\n    \"timestamp\" : \"0x55ba43eb\",\n    \"uncles\" : [ ],\n    \"transactions\" : [ ]\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{ \"query\": \"{block (number : 100) {transactions{hash} timestamp difficulty totalDifficulty gasUsed gasLimit hash nonce ommerCount logsBloom mixHash ommerHash extraData stateRoot receiptsRoot transactionCount transactionsRoot ommers{hash} ommerAt(index : 1){hash} miner{address} account(address: \\\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\\\"){balance} parent{hash} }}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(number: 100) {\n    transactions {\n      hash\n    }\n    timestamp\n    difficulty\n    totalDifficulty\n    gasUsed\n    gasLimit\n    hash\n    nonce\n    ommerCount\n    logsBloom\n    mixHash\n    ommerHash\n    extraData\n    stateRoot\n    receiptsRoot\n    transactionCount\n    transactionsRoot\n    ommers {\n      hash\n    }\n    ommerAt(index: 1) {\n      hash\n    }\n    miner {\n      address\n    }\n    account(address: \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\") {\n      balance\n    }\n    parent {\n      hash\n    }\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"transactions\" : [ ],\n      \"timestamp\" : \"0x5cd10933\",\n      \"difficulty\" : \"0x1\",\n      \"totalDifficulty\" : \"0x65\",\n      \"gasUsed\" : 0,\n      \"gasLimit\" : 4700000,\n      \"hash\" : \"0x63b3ea2bc37fec8f82680eb823652da6af8acebb4f6c4d0ff659c55be473c8b0\",\n      \"nonce\" : \"0x0000000000000000\",\n      \"ommerCount\" : 0,\n      \"logsBloom\" : \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n      \"mixHash\" : \"0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365\",\n      \"ommerHash\" : \"0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347\",\n      \"extraData\" : \"0xf882a00000000000000000000000000000000000000000000000000000000000000000d5949811ebc35d7b06b3fa8dc5809a1f9c52751e1deb808400000000f843b8414d877d8d0ced37ea138fab55a978f3740367a24a31731322ecdc3368f11e0d4966c9ce17ae59a76fb94eb436e8a386868f6bd6b0a5678e58daf49f5dd940558b00\",\n      \"stateRoot\" : \"0xd650578a04b39f50cc979155f4510ec28c2c0a7c1e5fdbf84609bc7b1c430f48\",\n      \"receiptsRoot\" : \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n      \"transactionCount\" : 0,\n      \"transactionsRoot\" : \"0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421\",\n      \"ommers\" : [ ],\n      \"ommerAt\" : null,\n      \"miner\" : {\n        \"address\" : \"0x9811ebc35d7b06b3fa8dc5809a1f9c52751e1deb\"\n      },\n      \"account\" : {\n        \"balance\" : \"0xad0f47f269cbf31ac\"\n      },\n      \"parent\" : {\n        \"hash\" : \"0x7bca25e1fa5e395fd6029eb496a70b6b5495843976bf9e49b993c723ded29d9e\"\n      }\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getTransactionByHash"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns transaction information for the specified transaction hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text {} " - 32-byte transaction hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:text {} "Object - "]
  [:link
   {:text "Transaction object",
    :url "API-Objects.md#transaction-object",
    :title ""}
   [:text {} "Transaction object"]]
  [:text {} ", or "]
  [:code {} [:text {} "null"]]
  [:text {} " when no transaction is found."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\":[\"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44\"],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByHash\",\"params\":[\"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44\"],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 53,\n  \"result\" : {\n    \"blockHash\" : \"0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda\",\n    \"blockNumber\" : \"0x422\",\n    \"from\" : \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\",\n    \"gas\" : \"0x5208\",\n    \"gasPrice\" : \"0x3b9aca00\",\n    \"hash\" : \"0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44\",\n    \"input\" : \"0x\",\n    \"nonce\" : \"0x1\",\n    \"to\" : \"0x627306090abab3a6e1400e9345bc60c78a8bef57\",\n    \"transactionIndex\" : \"0x0\",\n    \"value\" : \"0x4e1003b28d9280000\",\n    \"v\" : \"0xfe7\",\n    \"r\" : \"0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3\",\n    \"s\" : \"0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9\"\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{\"query\": \"{transaction(hash : \\\"0x03d80b9ca0a71435399a268609d6d7896f7155d2147cc22b780672bcb59b170d\\\") { block{hash} gas gasPrice hash nonce value from {address} to {address} status}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  transaction(hash: \"0x03d80b9ca0a71435399a268609d6d7896f7155d2147cc22b780672bcb59b170d\") {\n    block {\n      hash\n    }\n    gas\n    gasPrice\n    hash\n    nonce\n    value\n    from {\n      address\n    }\n    to {\n      address\n    }\n    status\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"transaction\" : {\n      \"block\" : {\n        \"hash\" : \"0xb1ef35744bade6980c3a933024b2557a8c724a19e5fdd2116bac712aa5e57198\"\n      },\n      \"gas\" : 21000,\n      \"gasPrice\" : \"0x2540be400\",\n      \"hash\" : \"0x03d80b9ca0a71435399a268609d6d7896f7155d2147cc22b780672bcb59b170d\",\n      \"nonce\" : 6,\n      \"value\" : \"0x8ac7230489e80000\",\n      \"from\" : {\n        \"address\" : \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\"\n      },\n      \"to\" : {\n        \"address\" : \"0x9d8f8572f345e1ae53db1dfa4a7fce49b467bd7f\"\n      },\n      \"status\" : 1\n    }\n  }\n}\n"]]]
 [:heading
  {:level 3}
  [:text {} "eth_getTransactionByBlockHashAndIndex"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns transaction information for the specified block hash and transaction index position."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text {} " - 32-byte hash of a block."]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY"]]
  [:text {} " - Integer representing the transaction index position."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:text {} "Object - "]
  [:link
   {:text "Transaction object",
    :url "API-Objects.md#transaction-object",
    :title ""}
   [:text {} "Transaction object"]]
  [:text {} ", or "]
  [:code {} [:text {} "null"]]
  [:text {} " when no transaction is found."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\":[\"0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7\", \"0x2\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockHashAndIndex\",\"params\":[\"0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7\", \"0x2\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : {\n    \"blockHash\" : \"0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7\",\n    \"blockNumber\" : \"0x1442e\",\n    \"from\" : \"0x70c9217d814985faef62b124420f8dfbddd96433\",\n    \"gas\" : \"0x3d090\",\n    \"gasPrice\" : \"0x57148a6be\",\n    \"hash\" : \"0xfc766a71c406950d4a4955a340a092626c35083c64c7be907060368a5e6811d6\",\n    \"input\" : \"0x51a34eb8000000000000000000000000000000000000000000000029b9e659e41b780000\",\n    \"nonce\" : \"0x2cb2\",\n    \"to\" : \"0xcfdc98ec7f01dab1b67b36373524ce0208dc3953\",\n    \"transactionIndex\" : \"0x2\",\n    \"value\" : \"0x0\",\n    \"v\" : \"0x2a\",\n    \"r\" : \"0xa2d2b1021e1428740a7c67af3c05fe3160481889b25b921108ac0ac2c3d5d40a\",\n    \"s\" : \"0x63186d2aaefe188748bfb4b46fb9493cbc2b53cf36169e8501a5bc0ed941b484\"\n  }\n }\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{\"query\": \"{ block(hash: \\\"0x9270651f9c6fa36232c379d0ecf69b519383aa275815a65f1e03114346668f69\\\") { transactionAt(index: 0) {block{hash}  hash } } }\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(hash: \"0x9270651f9c6fa36232c379d0ecf69b519383aa275815a65f1e03114346668f69\") {\n    transactionAt(index: 0) {\n      block {\n        hash\n      }\n      hash\n    }\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"transactionAt\" : {\n        \"block\" : {\n          \"hash\" : \"0x9270651f9c6fa36232c379d0ecf69b519383aa275815a65f1e03114346668f69\"\n        },\n        \"hash\" : \"0x5f5366af89e8777d5ae62a1af94a0876bdccbc22417bed0aff361eefa3e37f86\"\n      }\n    }\n  }\n}\n"]]]
 [:heading
  {:level 3}
  [:text {} "eth_getTransactionByBlockNumberAndIndex"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns transaction information for the specified block number and transaction index position."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY|TAG"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:code {} [:text {} "QUANTITY"]]
  [:text {} " - The transaction index position."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:text {} "Object - "]
  [:link
   {:text "Transaction object",
    :url "API-Objects.md#transaction-object",
    :title ""}
   [:text {} "Transaction object"]]
  [:text {} ", or "]
  [:code {} [:text {} "null"]]
  [:text {} " when no transaction is found."]]
 [:admonition-block
  {:title "", :info "example"}
  [:paragraph
   {}
   [:text
    {}
    "This request returns the third transaction in the 82990 block on the Ropsten testnet. You can also view this "]
   [:link
    {:text "block",
     :url "https://ropsten.etherscan.io/txs?block=82990",
     :title ""}
    [:text {} "block"]]
   [:text {} " and "]
   [:link
    {:text "transaction",
     :url
     "https://ropsten.etherscan.io/tx/0xfc766a71c406950d4a4955a340a092626c35083c64c7be907060368a5e6811d6",
     :title ""}
    [:text {} "transaction"]]
   [:text {} " on Etherscan."]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\":[\"82990\", \"0x2\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionByBlockNumberAndIndex\",\"params\":[\"82990\", \"0x2\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : {\n    \"blockHash\" : \"0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7\",\n    \"blockNumber\" : \"0x1442e\",\n    \"from\" : \"0x70c9217d814985faef62b124420f8dfbddd96433\",\n    \"gas\" : \"0x3d090\",\n    \"gasPrice\" : \"0x57148a6be\",\n    \"hash\" : \"0xfc766a71c406950d4a4955a340a092626c35083c64c7be907060368a5e6811d6\",\n    \"input\" : \"0x51a34eb8000000000000000000000000000000000000000000000029b9e659e41b780000\",\n    \"nonce\" : \"0x2cb2\",\n    \"to\" : \"0xcfdc98ec7f01dab1b67b36373524ce0208dc3953\",\n    \"transactionIndex\" : \"0x2\",\n    \"value\" : \"0x0\",\n    \"v\" : \"0x2a\",\n    \"r\" : \"0xa2d2b1021e1428740a7c67af3c05fe3160481889b25b921108ac0ac2c3d5d40a\",\n    \"s\" : \"0x63186d2aaefe188748bfb4b46fb9493cbc2b53cf36169e8501a5bc0ed941b484\"\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{\"query\": \"{block(number:20303) {transactionAt(index: 0) {block{hash} hash}}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  block(number: 20303) {\n    transactionAt(index: 0) {\n      block {\n        hash\n      }\n      hash\n    }\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"block\" : {\n      \"transactionAt\" : {\n      \"block\" : {\n        \"hash\" : \"0x9270651f9c6fa36232c379d0ecf69b519383aa275815a65f1e03114346668f69\"\n      },\n      \"hash\" : \"0x5f5366af89e8777d5ae62a1af94a0876bdccbc22417bed0aff361eefa3e37f86\"\n      }\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getTransactionReceipt"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the receipt of a transaction by transaction hash. Receipts for pending transactions are not available."]]
 [:paragraph
  {}
  [:text {} "If "]
  [:link
   {:text "revert reason",
    :url "../HowTo/Send-Transactions/Revert-Reason.md",
    :title ""}
   [:text {} "revert reason"]]
  [:text {} " is enabled, includes available revert"]
  [:soft-line-break {}]
  [:text {} "reasons in the response."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "DATA"]]
  [:text {} " - 32-byte hash of a transaction."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "Object"]]
  [:text {} " - "]
  [:link
   {:text "Transaction receipt object",
    :url "API-Objects.md#transaction-receipt-object",
    :title ""}
   [:text {} "Transaction receipt object"]]
  [:text {} ", or "]
  [:code {} [:text {} "null"]]
  [:text {} " when no receipt is found."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\":[\"0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f\"],\"id\":53}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getTransactionReceipt\",\"params\":[\"0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f\"],\"id\":53}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"blockHash\": \"0xe7212a92cfb9b06addc80dec2a0dfae9ea94fd344efeb157c41e12994fcad60a\",\n        \"blockNumber\": \"0x50\",\n        \"contractAddress\": null,\n        \"cumulativeGasUsed\": \"0x5208\",\n        \"from\": \"0x627306090abab3a6e1400e9345bc60c78a8bef57\",\n        \"gasUsed\": \"0x5208\",\n        \"logs\": [],\n        \"logsBloom\": \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\n        \"status\": \"0x1\",\n        \"to\": \"0xf17f52151ebef6c7334fad080c5704d77216b732\",\n        \"transactionHash\": \"0xc00e97af59c6f88de163306935f7682af1a34c67245e414537d02e422815efc3\",\n        \"transactionIndex\": \"0x0\"\n    }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{\"query\": \"{transaction(hash: \\\"0x5f5366af89e8777d5ae62a1af94a0876bdccbc22417bed0aff361eefa3e37f86\\\") {block{hash logsBloom} hash createdContract{address} cumulativeGasUsed gas gasUsed logs{topics} from{address} to{address} index}}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  transaction(hash: \"0x5f5366af89e8777d5ae62a1af94a0876bdccbc22417bed0aff361eefa3e37f86\") {\n    block {\n      hash\n      logsBloom\n    }\n    hash\n    createdContract {\n      address\n    }\n    cumulativeGasUsed\n    gas\n    gasUsed\n    logs {\n      topics\n    }\n    from {\n      address\n    }\n    to {\n      address\n    }\n    index\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\" : {\n    \"transaction\" : {\n      \"block\" : {\n        \"hash\" : \"0x9270651f9c6fa36232c379d0ecf69b519383aa275815a65f1e03114346668f69\",\n        \"logsBloom\" : \"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n      },\n      \"hash\" : \"0x5f5366af89e8777d5ae62a1af94a0876bdccbc22417bed0aff361eefa3e37f86\",\n      \"createdContract\" : null,\n      \"cumulativeGasUsed\" : 21000,\n      \"gas\" : 21000,\n      \"gasUsed\" : 21000,\n      \"logs\" : [ ],\n      \"from\" : {\n        \"address\" : \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\"\n      },\n      \"to\" : {\n        \"address\" : \"0x9d8f8572f345e1ae53db1dfa4a7fce49b467bd7f\"\n      },\n      \"index\" : 0\n    }\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_newFilter"]]
 [:paragraph
  {}
  [:text {} "Creates a "]
  [:link
   {:text "log filter",
    :url "../Concepts/Events-and-Logs.md",
    :title ""}
   [:text {} "log filter"]]
  [:text
   {}
   ". To poll for logs associated with the created filter, use "]
  [:link
   {:text "eth_getFilterChanges",
    :url "#eth_getfilterchanges",
    :title ""}
   [:text {} "eth_getFilterChanges"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "Object"]]
  [:text {} " - "]
  [:link
   {:text "Filter options object",
    :url "API-Objects.md#filter-options-object",
    :title ""}
   [:text {} "Filter options object"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:text {} "!!!note"]
  [:soft-line-break {}]
  [:code {} [:text {} "fromBlock"]]
  [:text {} " and "]
  [:code {} [:text {} "toBlock"]]
  [:text {} " in the filter options object default to "]
  [:code {} [:text {} "latest"]]
  [:text {} ". To obtain logs using "]
  [:code {} [:text {} "eth_getFilterLogs"]]
  [:text {} ", set "]
  [:code {} [:text {} "fromBlock"]]
  [:text {} " and "]
  [:code {} [:text {} "toBlock"]]
  [:text {} " appropriately."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Filter ID hash"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newFilter\",\"params\":[{\"fromBlock\":\"earliest\", \"toBlock\":\"latest\", \"topics\":[]}],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_newFilter\",\"params\":[{\"fromBlock\":\"earliest\", \"toBlock\":\"latest\", \"topics\":[]}],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"0x1ddf0c00989044e9b41cc0ae40272df3\"\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_newBlockFilter"]]
 [:paragraph
  {}
  [:text
   {}
   "Creates a filter to retrieve new block hashes. To poll for new blocks, use "]
  [:link
   {:text "eth_getFilterChanges",
    :url "#eth_getfilterchanges",
    :title ""}
   [:text {} "eth_getFilterChanges"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Filter ID hash"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newBlockFilter\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_newBlockFilter\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"0x9d78b6780f844228b96ecc65a320a825\"\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_newPendingTransactionFilter"]]
 [:paragraph
  {}
  [:text
   {}
   "Creates a filter to retrieve new pending transactions hashes. To poll for new pending transactions, use "]
  [:link
   {:text "eth_getFilterChanges",
    :url "#eth_getfilterchanges",
    :title ""}
   [:text {} "eth_getFilterChanges"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Filter ID hash"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_newPendingTransactionFilter\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_newPendingTransactionFilter\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"0x443d6a77c4964707a8554c92f7e4debd\"\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_uninstallFilter"]]
 [:paragraph
  {}
  [:text
   {}
   "Uninstalls a filter with the specified ID. When a filter is no longer required, call this method."]]
 [:paragraph
  {}
  [:text {} "Filters time out when not requested by "]
  [:link
   {:text "eth_getFilterChanges",
    :url "#eth_getfilterchanges",
    :title ""}
   [:text {} "eth_getFilterChanges"]]
  [:text {} " for 10 minutes."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Filter ID hash"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "Boolean"]]
  [:text {} " - "]
  [:code {} [:text {} "true"]]
  [:text {} " if the filter was successfully uninstalled; otherwise "]
  [:code {} [:text {} "false"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:paragraph
   {}
   [:text
    {}
    "The following request deletes the block filter with an ID of 0x4:"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_uninstallFilter\",\"params\":[\"0x70355a0b574b437eaa19fe95adfedc0a\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_uninstallFilter\",\"params\":[\"0x70355a0b574b437eaa19fe95adfedc0a\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : true\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getFilterChanges"]]
 [:paragraph
  {}
  [:text
   {}
   "Polls the specified filter and returns an array of changes that have occurred since the last poll."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Filter ID hash"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "Array of Object"]]
  [:text
   {}
   " - If nothing changed since the last poll, an empty list. Otherwise:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text {} "For filters created with "]
    [:code {} [:text {} "eth_newBlockFilter"]]
    [:text {} ", returns block hashes."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text {} "For filters created with "]
    [:code {} [:text {} "eth_newPendingTransactionFilter"]]
    [:text {} ", returns transaction hashes."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text {} "For filters created with "]
    [:code {} [:text {} "eth_newFilter"]]
    [:text {} ", returns "]
    [:link
     {:text "log objects", :url "API-Objects.md#log-object", :title ""}
     [:text {} "log objects"]]
    [:text {} "."]]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterChanges\",\"params\":[\"0xf8bf5598d9e04fbe84523d42640b9b0e\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterChanges\",\"params\":[\"0xf8bf5598d9e04fbe84523d42640b9b0e\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "\nExample result from a filter created with `eth_newBlockFilter`:\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        \"0xda2bfe44bf85394f0d6aa702b5af89ae50ae22c0928c18b8903d9269abe17e0b\",\n        \"0x88cd3a37306db1306f01f7a0e5b25a9df52719ad2f87b0f88ee0e6753ed4a812\",\n        \"0x4d4c731fe129ff32b425e6060d433d3fde278b565bbd1fd624d5a804a34f8786\"\n    ]\n}\n\nExample result from a filter created with `eth_newPendingTransactionFilter`:\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        \"0x1e977049b6db09362da09491bee3949d9362080ce3f4fc19721196d508580d46\",\n        \"0xa3abc4b9a4e497fd58dc59cdff52e9bb5609136bcd499e760798aa92802769be\"\n    ]\n}\n\nExample result from a filter created with `eth_newFilter`:\n\n{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        {\n            \"logIndex\": \"0x0\",\n            \"removed\": false,\n            \"blockNumber\": \"0x233\",\n            \"blockHash\": \"0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5\",\n            \"transactionHash\": \"0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d\",\n            \"transactionIndex\": \"0x0\",\n            \"address\": \"0x42699a7612a82f1d9c36148af9c77354759b210b\",\n            \"data\": \"0x0000000000000000000000000000000000000000000000000000000000000004\",\n            \"topics\": [\n                \"0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3\"\n            ]\n        },\n        {\n            \"logIndex\": \"0x0\",\n            \"removed\": false,\n            \"blockNumber\": \"0x238\",\n            \"blockHash\": \"0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed\",\n            \"transactionHash\": \"0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058\",\n            \"transactionIndex\": \"0x0\",\n            \"address\": \"0x42699a7612a82f1d9c36148af9c77354759b210b\",\n            \"data\": \"0x0000000000000000000000000000000000000000000000000000000000000007\",\n            \"topics\": [\n                \"0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3\"\n            ]\n        }\n    ]\n}\n\n"]]]
 [:heading {:level 3} [:text {} "eth_getFilterLogs"]]
 [:paragraph
  {}
  [:text {} "Returns an array of "]
  [:link
   {:text "logs", :url "../Concepts/Events-and-Logs.md", :title ""}
   [:text {} "logs"]]
  [:text {} " for the specified filter."]]
 [:paragraph
  {}
  [:text {} "Use "]
  [:link
   {:text "`admin_generateLogBloomCache`",
    :url "#admin_generatelogbloomcache",
    :title ""}
   [:code {} [:text {} "admin_generateLogBloomCache"]]]
  [:text {} " to improve log retrieval performance."]]
 [:paragraph
  {}
  [:text {} "!!!note"]
  [:soft-line-break {}]
  [:code {} [:text {} "eth_getFilterLogs"]]
  [:text {} " is only used for filters created with "]
  [:code {} [:text {} "eth_newFilter"]]
  [:text {} "."]]
 [:indented-code-block {}]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Filter ID hash"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "array"]]
  [:text {} " - "]
  [:link
   {:text "Log objects", :url "API-Objects.md#log-object", :title ""}
   [:text {} "Log objects"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterLogs\",\"params\":[\"0x5ace5de3985749b6a1b2b0d3f3e1fb69\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getFilterLogs\",\"params\":[\"0x5ace5de3985749b6a1b2b0d3f3e1fb69\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : [ {\n    \"logIndex\" : \"0x0\",\n    \"removed\" : false,\n    \"blockNumber\" : \"0xb3\",\n    \"blockHash\" : \"0xe7cd776bfee2fad031d9cc1c463ef947654a031750b56fed3d5732bee9c61998\",\n    \"transactionHash\" : \"0xff36c03c0fba8ac4204e4b975a6632c862a3f08aa01b004f570cc59679ed4689\",\n    \"transactionIndex\" : \"0x0\",\n    \"address\" : \"0x2e1f232a9439c3d459fceca0beef13acc8259dd8\",\n    \"data\" : \"0x0000000000000000000000000000000000000000000000000000000000000003\",\n    \"topics\" : [ \"0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3\" ]\n  }, {\n    \"logIndex\" : \"0x0\",\n    \"removed\" : false,\n    \"blockNumber\" : \"0xb6\",\n    \"blockHash\" : \"0x3f4cf35e7ed2667b0ef458cf9e0acd00269a4bc394bb78ee07733d7d7dc87afc\",\n    \"transactionHash\" : \"0x117a31d0dbcd3e2b9180c40aca476586a648bc400aa2f6039afdd0feab474399\",\n    \"transactionIndex\" : \"0x0\",\n    \"address\" : \"0x2e1f232a9439c3d459fceca0beef13acc8259dd8\",\n    \"data\" : \"0x0000000000000000000000000000000000000000000000000000000000000005\",\n    \"topics\" : [ \"0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3\" ]\n  } ]\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getLogs"]]
 [:paragraph
  {}
  [:text {} "Returns an array of "]
  [:link
   {:text "logs", :url "../Concepts/Events-and-Logs.md", :title ""}
   [:text {} "logs"]]
  [:text {} " matching a specified"]
  [:soft-line-break {}]
  [:text {} "filter object."]]
 [:paragraph
  {}
  [:text {} "Use "]
  [:link
   {:text "`admin_generateLogBloomCache`",
    :url "#admin_generatelogbloomcache",
    :title ""}
   [:code {} [:text {} "admin_generateLogBloomCache"]]]
  [:text {} " to improve log retrieval performance."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "Object"]]
  [:text {} " - "]
  [:link
   {:text "Filter options object",
    :url "API-Objects.md#filter-options-object",
    :title ""}
   [:text {} "Filter options object"]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "array"]]
  [:text {} " - "]
  [:link
   {:text "Log objects", :url "API-Objects.md#log-object", :title ""}
   [:text {} "Log objects"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"fromBlock\":\"earliest\", \"toBlock\":\"latest\", \"address\": \"0x2e1f232a9439c3d459fceca0beef13acc8259dd8\", \"topics\":[]}], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getLogs\",\"params\":[{\"fromBlock\":\"earliest\", \"toBlock\":\"latest\", \"address\": \"0x2e1f232a9439c3d459fceca0beef13acc8259dd8\", \"topics\":[]}], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : [ {\n    \"logIndex\" : \"0x0\",\n    \"removed\" : false,\n    \"blockNumber\" : \"0xb3\",\n    \"blockHash\" : \"0xe7cd776bfee2fad031d9cc1c463ef947654a031750b56fed3d5732bee9c61998\",\n    \"transactionHash\" : \"0xff36c03c0fba8ac4204e4b975a6632c862a3f08aa01b004f570cc59679ed4689\",\n    \"transactionIndex\" : \"0x0\",\n    \"address\" : \"0x2e1f232a9439c3d459fceca0beef13acc8259dd8\",\n    \"data\" : \"0x0000000000000000000000000000000000000000000000000000000000000003\",\n    \"topics\" : [ \"0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3\" ]\n  }, {\n    \"logIndex\" : \"0x0\",\n    \"removed\" : false,\n    \"blockNumber\" : \"0xb6\",\n    \"blockHash\" : \"0x3f4cf35e7ed2667b0ef458cf9e0acd00269a4bc394bb78ee07733d7d7dc87afc\",\n    \"transactionHash\" : \"0x117a31d0dbcd3e2b9180c40aca476586a648bc400aa2f6039afdd0feab474399\",\n    \"transactionIndex\" : \"0x0\",\n    \"address\" : \"0x2e1f232a9439c3d459fceca0beef13acc8259dd8\",\n    \"data\" : \"0x0000000000000000000000000000000000000000000000000000000000000005\",\n    \"topics\" : [ \"0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3\" ]\n  } ]\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST -H \"Content-Type: application/json\" --data '{\"query\": \"{logs(filter:{fromBlock: 1486000, toBlock: 1486010, addresses: [\\\"0x7ef66b77759e12caf3ddb3e4aff524e577c59d8d\\\"], topics: [[\\\"0x8a22ee899102a366ac8ad0495127319cb1ff2403cfae855f83a89cda1266674d\\\"]]}) {index topics data account{address} transaction{hash} }}\"}' http://localhost:8547/graphql\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  logs(filter: {fromBlock: 1486000, toBlock: 1486010, addresses: [\"0x7ef66b77759e12caf3ddb3e4aff524e577c59d8d\"], topics: [[\"0x8a22ee899102a366ac8ad0495127319cb1ff2403cfae855f83a89cda1266674d\"]]}) {\n    index\n    topics\n    data\n    account {\n      address\n    }\n    transaction {\n      hash\n    }\n  }\n}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"data\": {\n    \"logs\": [\n      {\n        \"index\": 0,\n        \"topics\": [\n          \"0x8a22ee899102a366ac8ad0495127319cb1ff2403cfae855f83a89cda1266674d\",\n          \"0x0000000000000000000000000000000000000000000000000000000000000004\",\n          \"0x0000000000000000000000000000000000000000000000000000000000508918\"\n        ],\n        \"data\": \"0xa5a04999ec29a8bd19ce32b859280ef9dbb464d846be06f64a1b1012ec08ab03\",\n        \"account\": {\n          \"address\": \"0x7ef66b77759e12caf3ddb3e4aff524e577c59d8d\"\n        },\n        \"transaction\": {\n          \"hash\": \"0x36a2186344c6a32760e7700fdf3685936220876c51ff39d071eb48c17f7e802f\"\n        }\n      },\n      {\n        \"index\": 0,\n        \"topics\": [\n          \"0x8a22ee899102a366ac8ad0495127319cb1ff2403cfae855f83a89cda1266674d\",\n          \"0x0000000000000000000000000000000000000000000000000000000000000003\",\n          \"0x0000000000000000000000000000000000000000000000000000000000648c72\"\n        ],\n        \"data\": \"0x0ee96b660ad82c8010c90760a03edfbb40b4af5e3634a8c214e4ac7fa1f61492\",\n        \"account\": {\n          \"address\": \"0x7ef66b77759e12caf3ddb3e4aff524e577c59d8d\"\n        },\n        \"transaction\": {\n          \"hash\": \"0x9e2cc9e84a9e78839d6f4b591dfd98cc7a454a8ee3cd6ccd0a18e662e22d3818\"\n        }\n      }\n    ]\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_getWork"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the hash of the current block, the seed hash, and the target boundary condition to be met."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "Array of DATA"]]
  [:text {} " with the following fields:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text
     {}
     "DATA, 32 Bytes - Hash of the current block header (pow-hash)."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text {} "DATA, 32 Bytes - The seed hash used for the DAG."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text
     {}
     "DATA, 32 Bytes - The target boundary condition to be met; 2^256 / difficulty."]]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eth_getWork\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"id\":1,\n  \"jsonrpc\":\"2.0\",\n  \"result\": [\n      \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\",\n      \"0x5EED00000000000000000000000000005EED0000000000000000000000000000\",\n      \"0xd1ff1c01710000000000000000000000d1ff1c01710000000000000000000000\"\n    ]\n}\n"]]]
 [:heading {:level 3} [:text {} "eth_submitWork"]]
 [:paragraph
  {}
  [:text {} "Submits a Proof of Work (Ethash) solution."]]
 [:paragraph
  {}
  [:text {} "Used by mining software such as "]
  [:link
   {:text "Ethminer",
    :url "https://github.com/ethereum-mining/ethminer",
    :title ""}
   [:text {} "Ethminer"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph {} [:text {} "DATA, 8 Bytes - Retrieved nonce."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text
     {}
     "DATA, 32 Bytes - Hash of the block header (PoW-hash)."]]]
  [:bullet-list-item
   {}
   [:paragraph {} [:text {} "DATA, 32 Bytes - Mix digest."]]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: Boolean"]]
  [:text {} ", "]
  [:code {} [:text {} "true"]]
  [:text {} " if the provided solution is valid, otherwise "]
  [:code {} [:text {} "false"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\", \"method\":\"eth_submitWork\", \"params\":[\"0x0000000000000001\", \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\", \"0xD1GE5700000000000000000000000000D1GE5700000000000000000000000000\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\", \"method\":\"eth_submitWork\", \"params\":[\"0x0000000000000001\", \"0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef\", \"0xD1GE5700000000000000000000000000D1GE5700000000000000000000000000\"],\"id\":73}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"id\":1,\n  \"jsonrpc\":\"2.0\",\n  \"result\": true\n}\n"]]]
 [:heading {:level 2} [:text {} "Clique Methods"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The "]
   [:code {} [:text {} "CLIQUE"]]
   [:text
    {}
    " API methods are not enabled by default for JSON-RPC. Use the "]
   [:link
    {:text "`--rpc-http-api`",
     :url "CLI/CLI-Syntax.md#rpc-http-api",
     :title ""}
    [:code {} [:text {} "--rpc-http-api"]]]
   [:soft-line-break {}]
   [:text {} "or "]
   [:link
    {:text "`--rpc-ws-api`",
     :url "CLI/CLI-Syntax.md#rpc-ws-api",
     :title ""}
    [:code {} [:text {} "--rpc-ws-api"]]]
   [:text {} " options to enable the "]
   [:code {} [:text {} "CLIQUE"]]
   [:text {} " API methods."]]]
 [:heading {:level 3} [:text {} "clique_discard"]]
 [:paragraph
  {}
  [:text {} "Discards a proposal to "]
  [:link
   {:text "add or remove a signer with the specified address",
    :url
    "../HowTo/Configure/Consensus-Protocols/Clique.md#adding-and-removing-signers",
    :title ""}
   [:text {} "add or remove a signer with the specified address"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - 20-byte address of proposed signer."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: boolean"]]
  [:text {} " - "]
  [:code {} [:text {} "true"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"clique_discard\",\"params\":[\"0xFE3B557E8Fb62b89F4916B721be55cEb828dBd73\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"clique_discard\",\"params\":[\"0xFE3B557E8Fb62b89F4916B721be55cEb828dBd73\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : true\n}\n"]]]
 [:heading {:level 3} [:text {} "clique_getSigners"]]
 [:paragraph
  {}
  [:text {} "Lists "]
  [:link
   {:text "signers for the specified block",
    :url
    "../HowTo/Configure/Consensus-Protocols/Clique.md#adding-and-removing-signers",
    :title ""}
   [:text {} "signers for the specified block"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "quantity|tag"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: array of data"]]
  [:text {} " - List of 20-byte addresses of signers."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"clique_getSigners\",\"params\":[\"latest\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"clique_getSigners\",\"params\":[\"latest\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : [ \"0x42eb768f2244c8811c63729a21a3569731535f06\", \"0x7ffc57839b00206d1ad20c69a1981b489f772031\", \"0xb279182d99e65703f0076e4812653aab85fca0f0\" ]\n}\n"]]]
 [:heading {:level 3} [:text {} "clique_getSignerMetrics"]]
 [:paragraph
  {}
  [:text {} "Provides validator metrics for the specified range:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph {} [:text {} "Number of blocks from each validator"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text
     {}
     "Block number of the last block proposed by each validator (if any proposed in the specified range)"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text {} "All validators present in the last block"]]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "fromBlockNumber"]]
  [:text
   {}
   " - Integer representing a block number or the string tag "]
  [:code {} [:text {} "earliest"]]
  [:text {} " as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]]
 [:paragraph
  {}
  [:code {} [:text {} "toBlockNumber"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} " or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]]
 [:paragraph
  {}
  [:text
   {}
   "If no parameters are specified, metrics are provided for the last 100 blocks or all blocks if there are less than 100 blocks."]]
 [:paragraph
  {}
  [:text
   {}
   "If only the first parameter is specified, metrics are provided for all blocks from the block specified by the first"]
  [:soft-line-break {}]
  [:text {} "parameter to the latest block."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ": "]
  [:emphasis {} [:text {} "object"]]
  [:text {} " - List of validator objects"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The proposer of the genesis block has address "]
   [:code {} [:text {} "0x0000000000000000000000000000000000000000"]]
   [:text {} "."]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"clique_getSignerMetrics\",\"params\":[\"1\", \"100\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"clique_getSignerMetrics\",\"params\":[\"1\", \"100\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        {\n            \"address\": \"0x7ffc57839b00206d1ad20c69a1981b489f772031\",\n            \"proposedBlockCount\": \"0x21\",\n            \"lastProposedBlockNumber\": \"0x61\"\n        },\n        {\n            \"address\": \"0x42eb768f2244c8811c63729a21a3569731535f06\",\n            \"proposedBlockCount\": \"0x21\",\n            \"lastProposedBlockNumber\": \"0x63\"\n        },\n        {\n            \"address\": \"0xb279182d99e65703f0076e4812653aab85fca0f0\",\n            \"proposedBlockCount\": \"0x21\",\n            \"lastProposedBlockNumber\": \"0x62\"\n        }\n    ]\n}\n"]]]
 [:heading {:level 3} [:text {} "clique_getSignersAtHash"]]
 [:paragraph {} [:text {} "Lists signers for the specified block."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - 32-byte block hash."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: array of data"]]
  [:text {} " - List of 20-byte addresses of signers."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"clique_getSignersAtHash\",\"params\":[\"0x98b2ddb5106b03649d2d337d42154702796438b3c74fd25a5782940e84237a48\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"clique_getSignersAtHash\",\"params\":[\"0x98b2ddb5106b03649d2d337d42154702796438b3c74fd25a5782940e84237a48\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : [ \"0x42eb768f2244c8811c63729a21a3569731535f06\", \"0x7ffc57839b00206d1ad20c69a1981b489f772031\", \"0xb279182d99e65703f0076e4812653aab85fca0f0\" ]\n}\n"]]]
 [:heading {:level 3} [:text {} "clique_propose"]]
 [:paragraph
  {}
  [:text {} "Proposes "]
  [:link
   {:text "adding or removing a signer with the specified address",
    :url
    "../HowTo/Configure/Consensus-Protocols/Clique.md#adding-and-removing-signers",
    :title ""}
   [:text {} "adding or removing a signer with the specified address"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - 20-byte address."]]
 [:paragraph
  {}
  [:code {} [:text {} "boolean"]]
  [:text {} " -  "]
  [:code {} [:text {} "true"]]
  [:text {} " to propose adding signer or "]
  [:code {} [:text {} "false"]]
  [:text {} " to propose removing signer."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: boolean"]]
  [:text {} " - "]
  [:code {} [:text {} "true"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"clique_propose\",\"params\":[\"0xFE3B557E8Fb62b89F4916B721be55cEb828dBd73\", true], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"clique_propose\",\"params\":[\"0xFE3B557E8Fb62b89F4916B721be55cEb828dBd73\", true], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n \"jsonrpc\" : \"2.0\",\n \"id\" : 1,\n \"result\" : true\n}\n"]]]
 [:heading {:level 3} [:text {} "clique_proposals"]]
 [:paragraph
  {}
  [:text {} "Returns "]
  [:link
   {:text "current proposals",
    :url
    "../HowTo/Configure/Consensus-Protocols/Clique.md#adding-and-removing-signers",
    :title ""}
   [:text {} "current proposals"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ":"]
  [:emphasis {} [:text {} "object"]]
  [:text
   {}
   " - Map of account addresses to corresponding boolean values indicating the proposal for each account."]]
 [:paragraph
  {}
  [:text {} "If the boolean value is "]
  [:code {} [:text {} "true"]]
  [:text {} ", the proposal is to add a signer. If "]
  [:code {} [:text {} "false"]]
  [:text {} ", the proposal is to remove a signer."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"clique_proposals\",\"params\":[], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"clique_proposals\",\"params\":[], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"0x42eb768f2244c8811c63729a21a3569731535f07\": false,\n        \"0x12eb759f2222d7711c63729a45c3585731521d01\": true\n    }\n}\n"]]]
 [:heading {:level 2} [:text {} "Debug Methods"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The "]
   [:code {} [:text {} "DEBUG"]]
   [:text
    {}
    " API methods are not enabled by default for JSON-RPC. Use the "]
   [:link
    {:text "`--rpc-http-api`",
     :url "CLI/CLI-Syntax.md#rpc-http-api",
     :title ""}
    [:code {} [:text {} "--rpc-http-api"]]]
   [:soft-line-break {}]
   [:text {} "or "]
   [:link
    {:text "`--rpc-ws-api`",
     :url "CLI/CLI-Syntax.md#rpc-ws-api",
     :title ""}
    [:code {} [:text {} "--rpc-ws-api"]]]
   [:text {} " options to enable the "]
   [:code {} [:text {} "DEBUG"]]
   [:text {} " API methods."]]]
 [:heading {:level 3} [:text {} "debug_accountRange"]]
 [:paragraph
  {}
  [:link
   {:text "Retesteth",
    :url
    "https://github.com/ethereum/retesteth/wiki/Retesteth-Overview",
    :title ""}
   [:text {} "Retesteth"]]
  [:text {} " uses "]
  [:code {} [:text {} "debug_accountRange"]]
  [:text {} " to implement debugging."]]
 [:paragraph
  {}
  [:text {} "Returns the accounts for a specified block."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "blockHashOrNumber"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - Block hash or number"]]
 [:paragraph
  {}
  [:code {} [:text {} "txIndex"]]
  [:text {} " : "]
  [:code {} [:text {} "integer"]]
  [:text {} " - Transaction index from which to start"]]
 [:paragraph
  {}
  [:code {} [:text {} "address"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - Address hash from which to start"]]
 [:paragraph
  {}
  [:code {} [:text {} "limit"]]
  [:text {} " : "]
  [:code {} [:text {} "integer"]]
  [:text {} " - Maximum number of account entries to return"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ":"]
  [:code {} [:text {} "object"]]
  [:text {} " - Account details:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "addressMap"]]
    [:text {} ":"]
    [:code {} [:text {} "object"]]
    [:text {} " - List of address hashes and account addresses."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "nextKey"]]
    [:text {} ":"]
    [:code {} [:text {} "data"]]
    [:text
     {}
     " - Hash of the next address if any addresses are left in the state, otherwise zero"]]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"debug_accountRange\",\"params\":[\"12345\", 0, \"0\", 5],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"debug_accountRange\",\"params\":[\"12345\", 0, \"0\", 5],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": {\n    \"addressMap\": {\n      \"0x005e5...86960\": \"0x0000000000000000000000000000000000000000\",\n      \"0x021fe...6ffe3\": \"0x0000000000000000000000000000000000000000\",\n      \"0x028e6...ab776\": \"0x0000000000000000000000000000000000000000\",\n      \"0x02cb5...bc4d8\": \"0x0000000000000000000000000000000000000000\",\n      \"0x03089...23fd5\": \"0x0000000000000000000000000000000000000000\"\n    },\n    \"nextKey\": \"0x04242954a5cb9748d3f66bcd4583fd3830287aa585bebd9dd06fa6625976be49\"\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "debug_storageRangeAt"]]
 [:paragraph
  {}
  [:link
   {:text "Remix", :url "https://remix.ethereum.org/", :title ""}
   [:text {} "Remix"]]
  [:text {} " uses "]
  [:code {} [:text {} "debug_storageRangeAt"]]
  [:text {} " to implement debugging. Use the "]
  [:emphasis {} [:text {} "Debugger"]]
  [:text {} " tab in Remix rather than calling "]
  [:code {} [:text {} "debug_storageRangeAt"]]
  [:text {} " directly."]]
 [:paragraph
  {}
  [:text {} "Returns the contract storage for the specified range."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "blockHash"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - Block hash"]]
 [:paragraph
  {}
  [:code {} [:text {} "txIndex"]]
  [:text {} " : "]
  [:code {} [:text {} "integer"]]
  [:text {} " - Transaction index from which to start"]]
 [:paragraph
  {}
  [:code {} [:text {} "address"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - Contract address"]]
 [:paragraph
  {}
  [:code {} [:text {} "startKey"]]
  [:text {} " : "]
  [:code {} [:text {} "hash"]]
  [:text {} " - Start key"]]
 [:paragraph
  {}
  [:code {} [:text {} "limit"]]
  [:text {} " : "]
  [:code {} [:text {} "integer"]]
  [:text {} " - Number of storage entries to return"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ":"]
  [:code {} [:text {} "object"]]
  [:text {} " - "]
  [:link
   {:text "Range object",
    :url "API-Objects.md#range-object",
    :title ""}
   [:text {} "Range object"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"debug_storageRangeAt\",\"params\":[\"0x2b76b3a2fc44c0e21ea183d06c846353279a7acf12abcc6fb9d5e8fb14ae2f8c\",0,\"0x0e0d2c8f7794e82164f11798276a188147fbd415\",\"0x0000000000000000000000000000000000000000000000000000000000000000\",1], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"debug_storageRangeAt\",\"params\":[\"0x2b76b3a2fc44c0e21ea183d06c846353279a7acf12abcc6fb9d5e8fb14ae2f8c\",0,\"0x0e0d2c8f7794e82164f11798276a188147fbd415\",\"0x0000000000000000000000000000000000000000000000000000000000000000\",1], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"storage\": {\n            \"0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563\": {\n                \"key\": null,\n                \"value\": \"0x0000000000000000000000000000000000000000000000000000000000000001\"\n            }\n        },\n        \"nextKey\": \"0xb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6\"\n    }\n}\n"]]]
 [:heading {:level 3} [:text {} "debug_metrics"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns metrics providing information on the internal operation of Besu."]]
 [:paragraph
  {}
  [:text
   {}
   "The available metrics may change over time. The JVM metrics may vary based on the JVM implementation being used."]]
 [:paragraph {} [:text {} "The metric types are:"]]
 [:bullet-list
  {}
  [:bullet-list-item {} [:paragraph {} [:text {} "Timer"]]]
  [:bullet-list-item {} [:paragraph {} [:text {} "Counter"]]]
  [:bullet-list-item {} [:paragraph {} [:text {} "Gauge"]]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ":"]
  [:code {} [:text {} "object"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"debug_metrics\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"debug_metrics\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"jvm\": {\n            \"memory_bytes_init\": {\n                \"heap\": 268435456,\n                \"nonheap\": 2555904\n            },\n            \"threads_current\": 41,\n            \"memory_bytes_used\": {\n                \"heap\": 696923976,\n                \"nonheap\": 63633456\n            },\n            \"memory_pool_bytes_used\": {\n                \"PS Eden Space\": 669119360,\n                \"Code Cache\": 19689024,\n                \"Compressed Class Space\": 4871144,\n                \"PS Survivor Space\": 2716320,\n                \"PS Old Gen\": 25088296,\n                \"Metaspace\": 39073288\n            },\n            ...\n        },\n        \"process\": {\n            \"open_fds\": 546,\n            \"cpu_seconds_total\": 67.148992,\n            \"start_time_seconds\": 1543897699.589,\n            \"max_fds\": 10240\n        },\n        \"rpc\": {\n            \"request_time\": {\n                \"debug_metrics\": {\n                    \"bucket\": {\n                        \"+Inf\": 2,\n                        \"0.01\": 1,\n                        \"0.075\": 2,\n                        \"0.75\": 2,\n                        \"0.005\": 1,\n                        \"0.025\": 2,\n                        \"0.1\": 2,\n                        \"1.0\": 2,\n                        \"0.05\": 2,\n                        \"10.0\": 2,\n                        \"0.25\": 2,\n                        \"0.5\": 2,\n                        \"5.0\": 2,\n                        \"2.5\": 2,\n                        \"7.5\": 2\n                    },\n                    \"count\": 2,\n                    \"sum\": 0.015925392\n                }\n            }\n        },\n        \"blockchain\": {\n            \"difficulty_total\": 3533501,\n            \"announcedBlock_ingest\": {\n                \"bucket\": {\n                    \"+Inf\": 0,\n                    \"0.01\": 0,\n                    \"0.075\": 0,\n                    \"0.75\": 0,\n                    \"0.005\": 0,\n                    \"0.025\": 0,\n                    \"0.1\": 0,\n                    \"1.0\": 0,\n                    \"0.05\": 0,\n                    \"10.0\": 0,\n                    \"0.25\": 0,\n                    \"0.5\": 0,\n                    \"5.0\": 0,\n                    \"2.5\": 0,\n                    \"7.5\": 0\n                },\n                \"count\": 0,\n                \"sum\": 0\n            },\n            \"height\": 1908793\n        },\n        \"peers\": {\n            \"disconnected_total\": {\n                \"remote\": {\n                    \"SUBPROTOCOL_TRIGGERED\": 5\n                },\n                \"local\": {\n                    \"TCP_SUBSYSTEM_ERROR\": 1,\n                    \"SUBPROTOCOL_TRIGGERED\": 2,\n                    \"USELESS_PEER\": 3\n                }\n            },\n            \"peer_count_current\": 2,\n            \"connected_total\": 10\n        }\n    }\n}\n"]]]
 [:heading {:level 3} [:text {} "debug_traceTransaction"]]
 [:paragraph
  {}
  [:link
   {:text "Remix", :url "https://remix.ethereum.org/", :title ""}
   [:text {} "Remix"]]
  [:text {} " uses "]
  [:code {} [:text {} "debug_traceTransaction"]]
  [:text {} " to implement debugging. Use the "]
  [:emphasis {} [:text {} "Debugger"]]
  [:text {} " tab in Remix rather than calling "]
  [:code {} [:text {} "debug_traceTransaction"]]
  [:text {} " directly."]]
 [:paragraph
  {}
  [:text
   {}
   "Reruns the transaction with the same state as when the transaction was executed."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "transactionHash"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - Transaction hash."]]
 [:paragraph
  {}
  [:code {} [:text {} "Object"]]
  [:text {} " - request options (all optional and default to "]
  [:code {} [:text {} "false"]]
  [:text {} "):"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableStorage"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables storage capture."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableMemory"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables memory capture."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableStack"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables stack capture."]]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ":"]
  [:code {} [:text {} "object"]]
  [:text {} " - "]
  [:link
   {:text "Trace object",
    :url "API-Objects.md#trace-object",
    :title ""}
   [:text {} "Trace object"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"debug_traceTransaction\",\"params\":[\"0x2cc6c94c21685b7e0f8ddabf277a5ccf98db157c62619cde8baea696a74ed18e\",{\"disableStorage\":true}],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"debug_traceTransaction\",\"params\":[\"0x2cc6c94c21685b7e0f8ddabf277a5ccf98db157c62619cde8baea696a74ed18e\",{\"disableStorage\":true}],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : {\n    \"gas\" : 21000,\n    \"failed\" : false,\n    \"returnValue\" : \"\",\n    \"structLogs\" : [ {\n      \"pc\" : 0,\n      \"op\" : \"STOP\",\n      \"gas\" : 0,\n      \"gasCost\" : 0,\n      \"depth\" : 1,\n      \"stack\" : [ ],\n      \"memory\" : [ ],\n      \"storage\" : null\n    } ]\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "debug_traceBlock"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns full trace of all invoked opcodes of all transactions included in the block."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "Block"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - RLP of the block"]]
 [:paragraph
  {}
  [:code {} [:text {} "Object"]]
  [:text {} " - request options (all optional and default to "]
  [:code {} [:text {} "false"]]
  [:text {} "):"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableStorage"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables storage capture."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableMemory"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables memory capture."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableStack"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables stack capture."]]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ":"]
  [:code {} [:text {} "object"]]
  [:text {} " - "]
  [:link
   {:text "Trace object",
    :url "API-Objects.md#trace-object",
    :title ""}
   [:text {} "Trace object"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"debug_traceBlock\",\"params\":[\"0xf90277f90208a05a41d0e66b4120775176c09fcf39e7c0520517a13d2b57b18d33d342df038bfca01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794e6a7a1d47ff21b6321162aea7c6cb457d5476bcaa00e0df2706b0a4fb8bd08c9246d472abbe850af446405d9eba1db41db18b4a169a04513310fcb9f6f616972a3b948dc5d547f280849a87ebb5af0191f98b87be598a0fe2bf2a941abf41d72637e5b91750332a30283efd40c424dc522b77e6f0ed8c4bc1bbd82b44382520b8252088455c426598b657468706f6f6c2e6f7267a0b48c515a9dde8d346c3337ea520aa995a4738bb595495506125449c1149d6cf488ba4f8ecd18aab215f869f86780862d79883d2000825208945df9b87991262f6ba471f09758cde1c0fc1de734827a69801ca088ff6cf0fefd94db46111149ae4bfc179e9b94721fffd821d38d16464b3f71d0a045e0aff800961cfce805daef7016b9b675c137a6a41a548f7b60a3484c06a33ac0\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"debug_traceBlock\",\"params\":[\"0xf90277f90208a05a41d0e66b4120775176c09fcf39e7c0520517a13d2b57b18d33d342df038bfca01dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d4934794e6a7a1d47ff21b6321162aea7c6cb457d5476bcaa00e0df2706b0a4fb8bd08c9246d472abbe850af446405d9eba1db41db18b4a169a04513310fcb9f6f616972a3b948dc5d547f280849a87ebb5af0191f98b87be598a0fe2bf2a941abf41d72637e5b91750332a30283efd40c424dc522b77e6f0ed8c4bc1bbd82b44382520b8252088455c426598b657468706f6f6c2e6f7267a0b48c515a9dde8d346c3337ea520aa995a4738bb595495506125449c1149d6cf488ba4f8ecd18aab215f869f86780862d79883d2000825208945df9b87991262f6ba471f09758cde1c0fc1de734827a69801ca088ff6cf0fefd94db46111149ae4bfc179e9b94721fffd821d38d16464b3f71d0a045e0aff800961cfce805daef7016b9b675c137a6a41a548f7b60a3484c06a33ac0\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : {\n    \"gas\" : 21000,\n    \"failed\" : false,\n    \"returnValue\" : \"\",\n    \"structLogs\" : [ {\n      \"pc\" : 0,\n      \"op\" : \"STOP\",\n      \"gas\" : 0,\n      \"gasCost\" : 0,\n      \"depth\" : 1,\n      \"stack\" : [ ],\n      \"memory\" : [ ],\n      \"storage\" : null\n    } ]\n  }\n}\n"]]]
 [:heading {:level 3} [:text {} "debug_traceBlockByHash"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns full trace of all invoked opcodes of all transactions included in the block."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "block hash"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - Block hash"]]
 [:paragraph
  {}
  [:code {} [:text {} "Object"]]
  [:text {} " - request options (all optional and default to "]
  [:code {} [:text {} "false"]]
  [:text {} "):"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableStorage"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables storage capture."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableMemory"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables memory capture."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableStack"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables stack capture."]]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ":"]
  [:code {} [:text {} "array of objects"]]
  [:text {} " - "]
  [:link
   {:text "Trace objects",
    :url "API-Objects.md#trace-object",
    :title ""}
   [:text {} "Trace objects"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"debug_traceBlockByHash\",\"params\":[\"0xaceb3b2c9b25b0589230873921eb894b28722011b8df63977145517d754875a5\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"debug_traceBlockByHash\",\"params\":[\"0xaceb3b2c9b25b0589230873921eb894b28722011b8df63977145517d754875a5\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        {\n            \"gas\": 21000,\n            \"failed\": false,\n            \"returnValue\": \"\",\n            \"structLogs\": [\n                {\n                    \"pc\": 0,\n                    \"op\": \"STOP\",\n                    \"gas\": 0,\n                    \"gasCost\": 0,\n                    \"depth\": 1,\n                    \"stack\": [],\n                    \"memory\": [],\n                    \"storage\": {},\n                    \"reason\": null\n                }\n            ]\n        }\n    ]\n}\n"]]]
 [:heading {:level 3} [:text {} "debug_traceBlockByNumber"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns full trace of all invoked opcodes of all transactions included in the block."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "quantity|tag"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:code {} [:text {} "Object"]]
  [:text {} " - request options (all optional and default to "]
  [:code {} [:text {} "false"]]
  [:text {} "):"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableStorage"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables storage capture."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableMemory"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables memory capture."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "disableStack"]]
    [:text {} " : "]
    [:code {} [:text {} "boolean"]]
    [:text {} " - "]
    [:code {} [:text {} "true"]]
    [:text {} " disables stack capture."]]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ":"]
  [:code {} [:text {} "array of objects"]]
  [:text {} " - "]
  [:link
   {:text "Trace objects",
    :url "API-Objects.md#trace-object",
    :title ""}
   [:text {} "Trace objects"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"debug_traceBlockByNumber\",\"params\":[\"0x7224\",{\"disableStorage\":true}], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"debug_traceBlockByNumber\",\"params\":[\"0x7224\",{\"disableStorage\":true}], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        {\n            \"gas\": 21000,\n            \"failed\": false,\n            \"returnValue\": \"\",\n            \"structLogs\": [\n                {\n                    \"pc\": 0,\n                    \"op\": \"STOP\",\n                    \"gas\": 0,\n                    \"gasCost\": 0,\n                    \"depth\": 1,\n                    \"stack\": [],\n                    \"memory\": [],\n                    \"storage\": null,\n                    \"reason\": null\n                }\n            ]\n        }\n    ]\n}\n"]]]
 [:heading {:level 2} [:text {} "Miner Methods"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The "]
   [:code {} [:text {} "MINER"]]
   [:text
    {}
    " API methods are not enabled by default for JSON-RPC. Use the "]
   [:link
    {:text "`--rpc-http-api`",
     :url "CLI/CLI-Syntax.md#rpc-http-api",
     :title ""}
    [:code {} [:text {} "--rpc-http-api"]]]
   [:soft-line-break {}]
   [:text {} "or "]
   [:link
    {:text "`--rpc-ws-api`",
     :url "CLI/CLI-Syntax.md#rpc-ws-api",
     :title ""}
    [:code {} [:text {} "--rpc-ws-api"]]]
   [:text {} " options to enable the "]
   [:code {} [:text {} "MINER"]]
   [:text {} " API methods."]]]
 [:heading {:level 3} [:text {} "miner_start"]]
 [:paragraph
  {}
  [:text
   {}
   "Starts the mining process. To start mining, a miner coinbase must have been previously specified using the "]
  [:link
   {:text "`--miner-coinbase`",
    :url "CLI/CLI-Syntax.md#miner-coinbase",
    :title ""}
   [:code {} [:text {} "--miner-coinbase"]]]
  [:text {} " command line option."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " :  "]
  [:code {} [:text {} "boolean"]]
  [:text {} " - "]
  [:code {} [:text {} "true"]]
  [:text
   {}
   " if the mining start request was received successfully; otherwise returns an error."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"miner_start\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"miner_start\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": true\n}\n"]]]
 [:heading {:level 3} [:text {} "miner_stop"]]
 [:paragraph {} [:text {} "Stops the mining process on the client."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " :  "]
  [:code {} [:text {} "boolean"]]
  [:text {} " - "]
  [:code {} [:text {} "true"]]
  [:text
   {}
   " if the mining stop request was received successfully; otherwise returns an error."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"miner_stop\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"miner_stop\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": true\n}\n"]]]
 [:heading {:level 2} [:text {} "IBFT 2.0 Methods"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The "]
   [:code {} [:text {} "IBFT"]]
   [:text
    {}
    " API methods are not enabled by default for JSON-RPC. Use the "]
   [:link
    {:text "`--rpc-http-api`",
     :url "CLI/CLI-Syntax.md#rpc-http-api",
     :title ""}
    [:code {} [:text {} "--rpc-http-api"]]]
   [:soft-line-break {}]
   [:text {} "or "]
   [:link
    {:text "`--rpc-ws-api`",
     :url "CLI/CLI-Syntax.md#rpc-ws-api",
     :title ""}
    [:code {} [:text {} "--rpc-ws-api"]]]
   [:text {} " options to enable the "]
   [:code {} [:text {} "IBFT"]]
   [:text {} " API methods."]]]
 [:heading {:level 3} [:text {} "ibft_discardValidatorVote"]]
 [:paragraph
  {}
  [:text {} "Discards a proposal to "]
  [:link
   {:text "add or remove a validator",
    :url
    "../HowTo/Configure/Consensus-Protocols/IBFT.md#adding-and-removing-validators",
    :title ""}
   [:text {} "add or remove a validator"]]
  [:text {} " with the specified address."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - 20-byte address of proposed validator"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: boolean"]]
  [:text {} " - "]
  [:code {} [:text {} "true"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"ibft_discardValidatorVote\",\"params\":[\"0xef1bfb6a12794615c9b0b5a21e6741f01e570185\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"ibft_discardValidatorVote\",\"params\":[\"0xef1bfb6a12794615c9b0b5a21e6741f01e570185\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\" : \"2.0\",\n  \"id\" : 1,\n  \"result\" : true\n}\n"]]]
 [:heading {:level 3} [:text {} "ibft_getPendingVotes"]]
 [:paragraph
  {}
  [:text {} "Returns "]
  [:link
   {:text "current votes",
    :url
    "../HowTo/Configure/Consensus-Protocols/IBFT.md#adding-and-removing-validators",
    :title ""}
   [:text {} "current votes"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ": "]
  [:code {} [:text {} "object"]]
  [:text
   {}
   " - Map of account addresses to corresponding boolean values indicating the vote for each account."]]
 [:paragraph
  {}
  [:text {} "If the boolean value is "]
  [:code {} [:text {} "true"]]
  [:text {} ", the vote is to add a validator. If "]
  [:code {} [:text {} "false"]]
  [:text {} ", the proposal is to remove a validator."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"ibft_getPendingVotes\",\"params\":[], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"ibft_getPendingVotes\",\"params\":[], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"0xef1bfb6a12794615c9b0b5a21e6741f01e570185\": true,\n        \"0x42d4287eac8078828cf5f3486cfe601a275a49a5\": true\n    }\n}\n"]]]
 [:heading {:level 3} [:text {} "ibft_getValidatorsByBlockHash"]]
 [:paragraph
  {}
  [:text {} "Lists the validators defined in the specified block."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - 32-byte block hash"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: array of data"]]
  [:text {} " - List of validator addresses"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"ibft_getValidatorsByBlockHash\",\"params\":[\"0xbae7d3feafd743343b9a4c578cab5e5d65eb735f6855fb845c00cab356331256\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"ibft_getValidatorsByBlockHash\",\"params\":[\"0xbae7d3feafd743343b9a4c578cab5e5d65eb735f6855fb845c00cab356331256\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        \"0x42d4287eac8078828cf5f3486cfe601a275a49a5\",\n        \"0xb1b2bc9582d2901afdc579f528a35ca41403fa85\",\n        \"0xef1bfb6a12794615c9b0b5a21e6741f01e570185\"\n    ]\n}\n"]]]
 [:heading {:level 3} [:text {} "ibft_getValidatorsByBlockNumber"]]
 [:paragraph
  {}
  [:text {} "Lists the validators defined in the specified block."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "quantity|tag"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} ", "]
  [:code {} [:text {} "earliest"]]
  [:text {} ", or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: array of data"]]
  [:text {} " - List of validator addresses"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"ibft_getValidatorsByBlockNumber\",\"params\":[\"latest\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"ibft_getValidatorsByBlockNumber\",\"params\":[\"latest\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        \"0x42d4287eac8078828cf5f3486cfe601a275a49a5\",\n        \"0xb1b2bc9582d2901afdc579f528a35ca41403fa85\",\n        \"0xef1bfb6a12794615c9b0b5a21e6741f01e570185\"\n    ]\n}\n"]]]
 [:heading {:level 3} [:text {} "ibft_proposeValidatorVote"]]
 [:paragraph
  {}
  [:text {} "Proposes "]
  [:link
   {:text "adding or removing a validator",
    :url
    "../HowTo/Configure/Consensus-Protocols/IBFT.md#adding-and-removing-validators",
    :title ""}
   [:text {} "adding or removing a validator"]]
  [:text {} " with the specified address."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Account address"]]
 [:paragraph
  {}
  [:code {} [:text {} "boolean"]]
  [:text {} " -  "]
  [:code {} [:text {} "true"]]
  [:text {} " to propose adding validator or "]
  [:code {} [:text {} "false"]]
  [:text {} " to propose removing validator."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: boolean"]]
  [:text {} " - "]
  [:code {} [:text {} "true"]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"ibft_proposeValidatorVote\",\"params\":[\"42d4287eac8078828cf5f3486cfe601a275a49a5\",true], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"ibft_proposeValidatorVote\",\"params\":[\"42d4287eac8078828cf5f3486cfe601a275a49a5\",true], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n \"jsonrpc\" : \"2.0\",\n \"id\" : 1,\n \"result\" : true\n}\n"]]]
 [:heading {:level 3} [:text {} "ibft_getSignerMetrics"]]
 [:paragraph
  {}
  [:text {} "Provides validator metrics for the specified range:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph {} [:text {} "Number of blocks from each validator"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text
     {}
     "Block number of the last block proposed by each validator (if any proposed in the specified range)"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:text
     {}
     "All validators present in the last block of the range"]]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "fromBlockNumber"]]
  [:text
   {}
   " - Integer representing a block number or the string tag "]
  [:code {} [:text {} "earliest"]]
  [:text {} " as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]]
 [:paragraph
  {}
  [:code {} [:text {} "toBlockNumber"]]
  [:text
   {}
   " - Integer representing a block number or one of the string tags "]
  [:code {} [:text {} "latest"]]
  [:text {} " or "]
  [:code {} [:text {} "pending"]]
  [:text {} ", as described in "]
  [:link
   {:text "Block Parameter",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#block-parameter",
    :title ""}
   [:text {} "Block Parameter"]]]
 [:paragraph
  {}
  [:text
   {}
   "If no parameters are specified, metrics are provided for the last 100 blocks or all blocks if there are less than 100 blocks."]]
 [:paragraph
  {}
  [:text
   {}
   "If only the first parameter is specified, metrics are provided for all blocks from the block specified by the first"]
  [:soft-line-break {}]
  [:text {} "parameter to the latest block."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} ": "]
  [:emphasis {} [:text {} "object"]]
  [:text {} " - List of validator objects"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The proposer of the genesis block has address "]
   [:code {} [:text {} "0x0000000000000000000000000000000000000000"]]
   [:text {} "."]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"ibft_getSignerMetrics\",\"params\":[\"1\", \"100\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"ibft_getSignerMetrics\",\"params\":[\"1\", \"100\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        {\n            \"address\": \"0x7ffc57839b00206d1ad20c69a1981b489f772031\",\n            \"proposedBlockCount\": \"0x21\",\n            \"lastProposedBlockNumber\": \"0x61\"\n        },\n        {\n            \"address\": \"0x42eb768f2244c8811c63729a21a3569731535f06\",\n            \"proposedBlockCount\": \"0x21\",\n            \"lastProposedBlockNumber\": \"0x63\"\n        },\n        {\n            \"address\": \"0xb279182d99e65703f0076e4812653aab85fca0f0\",\n            \"proposedBlockCount\": \"0x21\",\n            \"lastProposedBlockNumber\": \"0x62\"\n        }\n    ]\n}\n"]]]
 [:heading {:level 2} [:text {} "Permissioning Methods"]]
 [:paragraph
  {}
  [:text {} "The permissioning API methods are used for "]
  [:link
   {:text "local",
    :url "../HowTo/Limit-Access/Local-Permissioning.md",
    :title ""}
   [:text {} "local"]]
  [:text {} " permissioning only."]]
 [:admonition-block
  {:title "", :info "important"}
  [:paragraph
   {}
   [:text {} "The "]
   [:code {} [:text {} "PERM"]]
   [:text
    {}
    " API methods are not enabled by default for JSON-RPC. Use the "]
   [:link
    {:text "`--rpc-http-api`",
     :url "CLI/CLI-Syntax.md#rpc-http-api",
     :title ""}
    [:code {} [:text {} "--rpc-http-api"]]]
   [:soft-line-break {}]
   [:text {} "or "]
   [:link
    {:text "`--rpc-ws-api`",
     :url "CLI/CLI-Syntax.md#rpc-ws-api",
     :title ""}
    [:code {} [:text {} "--rpc-ws-api"]]]
   [:text {} " CLI options to enable the "]
   [:code {} [:text {} "PERM"]]
   [:text {} " API methods."]]]
 [:heading {:level 3} [:text {} "perm_addAccountsToWhitelist"]]
 [:paragraph
  {}
  [:text {} "Adds accounts (participants) to the "]
  [:link
   {:text "accounts whitelist",
    :url
    "../HowTo/Limit-Access/Local-Permissioning.md#account-whitelisting",
    :title ""}
   [:text {} "accounts whitelist"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "list of strings"]]
  [:text {} " - List of account addresses"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text
    {}
    "The parameters list contains a list which is why the account addresses are enclosed by double square brackets."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " - "]
  [:code {} [:text {} "Success"]]
  [:text {} " or "]
  [:code {} [:text {} "error"]]
  [:text
   {}
   ". Errors include attempting to add accounts already on the whitelist or"]
  [:soft-line-break {}]
  [:text {} "including invalid account addresses."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"perm_addAccountsToWhitelist\",\"params\":[[\"0xb9b81ee349c3807e46bc71aa2632203c5b462032\", \"0xb9b81ee349c3807e46bc71aa2632203c5b462034\"]], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"perm_addAccountsToWhitelist\",\"params\":[[\"0xb9b81ee349c3807e46bc71aa2632203c5b462032\", \"0xb9b81ee349c3807e46bc71aa2632203c5b462034\"]], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"Success\"\n}\n"]]]
 [:heading {:level 3} [:text {} "perm_getAccountsWhitelist"]]
 [:paragraph
  {}
  [:text {} "Lists accounts (participants) in the "]
  [:link
   {:text "accounts whitelist",
    :url
    "../HowTo/Limit-Access/Local-Permissioning.md#account-whitelisting",
    :title ""}
   [:text {} "accounts whitelist"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: list"]]
  [:text {} " - Accounts (participants) in the accounts whitelist."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"perm_getAccountsWhitelist\",\"params\":[], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"perm_getAccountsWhitelist\",\"params\":[], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        \"0x0000000000000000000000000000000000000009\",\n        \"0xb9b81ee349c3807e46bc71aa2632203c5b462033\"\n    ]\n}\n"]]]
 [:heading {:level 3} [:text {} "perm_removeAccountsFromWhitelist"]]
 [:paragraph
  {}
  [:text {} "Removes accounts (participants) from the "]
  [:link
   {:text "accounts whitelist",
    :url
    "../HowTo/Limit-Access/Local-Permissioning.md#account-whitelisting",
    :title ""}
   [:text {} "accounts whitelist"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "list of strings"]]
  [:text {} " - List of account addresses"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text
    {}
    "The parameters list contains a list which is why the account addresses are enclosed by double square brackets."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " - "]
  [:code {} [:text {} "Success"]]
  [:text {} " or "]
  [:code {} [:text {} "error"]]
  [:text
   {}
   ". Errors include attempting to remove accounts not on the whitelist or"]
  [:soft-line-break {}]
  [:text {} "including invalid account addresses."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"perm_removeAccountsFromWhitelist\",\"params\":[[\"0xb9b81ee349c3807e46bc71aa2632203c5b462032\", \"0xb9b81ee349c3807e46bc71aa2632203c5b462034\"]], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"perm_removeAccountsFromWhitelist\",\"params\":[[\"0xb9b81ee349c3807e46bc71aa2632203c5b462032\", \"0xb9b81ee349c3807e46bc71aa2632203c5b462034\"]], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"Success\"\n}\n"]]]
 [:heading {:level 3} [:text {} "perm_addNodesToWhitelist"]]
 [:paragraph
  {}
  [:text {} "Adds nodes to the "]
  [:link
   {:text "nodes whitelist",
    :url
    "../HowTo/Limit-Access/Local-Permissioning.md#node-whitelisting",
    :title ""}
   [:text {} "nodes whitelist"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "list of strings"]]
  [:text {} " - List of "]
  [:link
   {:text "enode URLs",
    :url "../Concepts/Node-Keys.md#enode-url",
    :title ""}
   [:text {} "enode URLs"]]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text
    {}
    "The parameters list contains a list which is why the enode URLs are enclosed by double square brackets."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " - "]
  [:code {} [:text {} "Success"]]
  [:text {} " or "]
  [:code {} [:text {} "error"]]
  [:text
   {}
   ". Errors include attempting to add nodes already on the whitelist or"]
  [:soft-line-break {}]
  [:text {} "including invalid enode URLs."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"perm_addNodesToWhitelist\",\"params\":[[\"enode://7e4ef30e9ec683f26ad76ffca5b5148fa7a6575f4cfad4eb0f52f9c3d8335f4a9b6f9e66fcc73ef95ed7a2a52784d4f372e7750ac8ae0b544309a5b391a23dd7@127.0.0.1:30303\",\"enode://2feb33b3c6c4a8f77d84a5ce44954e83e5f163e7a65f7f7a7fec499ceb0ddd76a46ef635408c513d64c076470eac86b7f2c8ae4fcd112cb28ce82c0d64ec2c94@127.0.0.1:30304\"]], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"perm_addNodesToWhitelist\",\"params\":[[\"enode://7e4ef30e9ec683f26ad76ffca5b5148fa7a6575f4cfad4eb0f52f9c3d8335f4a9b6f9e66fcc73ef95ed7a2a52784d4f372e7750ac8ae0b544309a5b391a23dd7@127.0.0.1:30303\",\"enode://2feb33b3c6c4a8f77d84a5ce44954e83e5f163e7a65f7f7a7fec499ceb0ddd76a46ef635408c513d64c076470eac86b7f2c8ae4fcd112cb28ce82c0d64ec2c94@127.0.0.1:30304\"]], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"Success\"\n}\n"]]]
 [:heading {:level 3} [:text {} "perm_getNodesWhitelist"]]
 [:paragraph
  {}
  [:text {} "Lists nodes in the "]
  [:link
   {:text "nodes whitelist",
    :url
    "../HowTo/Limit-Access/Local-Permissioning.md#node-whitelisting",
    :title ""}
   [:text {} "nodes whitelist"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result: list"]]
  [:text {} " - "]
  [:link
   {:text "Enode URLs",
    :url "../Concepts/Node-Keys.md#enode-url",
    :title ""}
   [:text {} "Enode URLs"]]
  [:text {} " of nodes in the nodes whitelist."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"perm_getNodesWhitelist\",\"params\":[], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"perm_getNodesWhitelist\",\"params\":[], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        \"enode://7b61d5ee4b44335873e6912cb5dd3e3877c860ba21417c9b9ef1f7e500a82213737d4b269046d0669fb2299a234ca03443f25fe5f706b693b3669e5c92478ade@127.0.0.1:30305\",\n        \"enode://2feb33b3c6c4a8f77d84a5ce44954e83e5f163e7a65f7f7a7fec499ceb0ddd76a46ef635408c513d64c076470eac86b7f2c8ae4fcd112cb28ce82c0d64ec2c94@127.0.0.1:30304\"\n    ]\n}\n"]]]
 [:heading {:level 3} [:text {} "perm_removeNodesFromWhitelist"]]
 [:paragraph
  {}
  [:text {} "Removes nodes from the "]
  [:link
   {:text "nodes whitelist",
    :url
    "../HowTo/Limit-Access/Local-Permissioning.md#node-whitelisting",
    :title ""}
   [:text {} "nodes whitelist"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "list of strings"]]
  [:text {} " - List of "]
  [:link
   {:text "enode URLs",
    :url "../Concepts/Node-Keys.md#enode-url",
    :title ""}
   [:text {} "enode URLs"]]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text
    {}
    "The parameters list contains a list which is why the enode URLs are enclosed by double square brackets."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " - "]
  [:code {} [:text {} "Success"]]
  [:text {} " or "]
  [:code {} [:text {} "error"]]
  [:text
   {}
   ". Errors include attempting to remove nodes not on the whitelist or"]
  [:soft-line-break {}]
  [:text {} "including invalid enode URLs."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"perm_removeNodesFromWhitelist\",\"params\":[[\"enode://7e4ef30e9ec683f26ad76ffca5b5148fa7a6575f4cfad4eb0f52f9c3d8335f4a9b6f9e66fcc73ef95ed7a2a52784d4f372e7750ac8ae0b544309a5b391a23dd7@127.0.0.1:30303\",\"enode://2feb33b3c6c4a8f77d84a5ce44954e83e5f163e7a65f7f7a7fec499ceb0ddd76a46ef635408c513d64c076470eac86b7f2c8ae4fcd112cb28ce82c0d64ec2c94@127.0.0.1:30304\"]], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"perm_removeNodesFromWhitelist\",\"params\":[[\"enode://7e4ef30e9ec683f26ad76ffca5b5148fa7a6575f4cfad4eb0f52f9c3d8335f4a9b6f9e66fcc73ef95ed7a2a52784d4f372e7750ac8ae0b544309a5b391a23dd7@127.0.0.1:30303\",\"enode://2feb33b3c6c4a8f77d84a5ce44954e83e5f163e7a65f7f7a7fec499ceb0ddd76a46ef635408c513d64c076470eac86b7f2c8ae4fcd112cb28ce82c0d64ec2c94@127.0.0.1:30304\"]], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"Success\"\n}\n"]]]
 [:heading {:level 3} [:text {} "perm_reloadPermissionsFromFile"]]
 [:paragraph
  {}
  [:text {} "Reloads the accounts and nodes whitelists from the "]
  [:link
   {:text "permissions configuration file",
    :url
    "../HowTo/Limit-Access/Local-Permissioning.md#permissions-configuration-file",
    :title ""}
   [:text {} "permissions configuration file"]]
  [:text {} "."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " - "]
  [:code {} [:text {} "Success"]]
  [:text {} " or "]
  [:code {} [:text {} "error"]]
  [:text {} " if the permissions configuration file is not valid."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"perm_reloadPermissionsFromFile\",\"params\":[], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"perm_reloadPermissionsFromFile\",\"params\":[], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"Success\"\n}\n"]]]
 [:heading {:level 2} [:text {} "Txpool Methods"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The "]
   [:code {} [:text {} "TXPOOL"]]
   [:text
    {}
    " API methods are not enabled by default for JSON-RPC. Use the "]
   [:link
    {:text "`--rpc-http-api`",
     :url "CLI/CLI-Syntax.md#rpc-http-api",
     :title ""}
    [:code {} [:text {} "--rpc-http-api"]]]
   [:soft-line-break {}]
   [:text {} "or "]
   [:link
    {:text "`--rpc-ws-api`",
     :url "CLI/CLI-Syntax.md#rpc-ws-api",
     :title ""}
    [:code {} [:text {} "--rpc-ws-api"]]]
   [:text {} " options to enable the "]
   [:code {} [:text {} "TXPOOL"]]
   [:text {} " API methods."]]]
 [:heading {:level 3} [:text {} "txpool_besuStatistics"]]
 [:paragraph
  {}
  [:text {} "Lists statistics about the node transaction pool."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " - Transaction pool statistics:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "maxSize"]]
    [:text
     {}
     " - Maximum number of transactions kept in the transaction pool. Use the "]
    [:link
     {:text "`--tx-pool-max-size`",
      :url "CLI/CLI-Syntax.md#tx-pool-max-size",
      :title ""}
     [:code {} [:text {} "--tx-pool-max-size"]]]
    [:soft-line-break {}]
    [:text {} "option to configure the maximum size."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "localCount"]]
    [:text
     {}
     " - Number of transactions submitted directly to this node"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "remoteCount"]]
    [:text
     {}
     " - Number of transactions received from remote nodes."]]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"txpool_besuStatistics\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"txpool_besuStatistics\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"maxSize\": 4096,\n        \"localCount\": 1,\n        \"remoteCount\": 0\n    }\n}\n"]]]
 [:heading {:level 3} [:text {} "txpool_besuTransactions"]]
 [:paragraph
  {}
  [:text {} "Lists transactions in the node transaction pool."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " - List of transactions"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"txpool_besuTransactions\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"txpool_besuTransactions\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": [\n        {\n            \"hash\": \"0x8a66830098be4006a3f63a03b6e9b67aa721e04bd6b46d420b8f1937689fb4f1\",\n            \"isReceivedFromLocalSource\": true,\n            \"addedToPoolAt\": \"2019-03-21T01:35:50.911Z\"\n        },\n        {\n            \"hash\": \"0x41ee803c3987ceb5bcea0fad7a76a8106a2a6dd654409007d9931032ea54579b\",\n            \"isReceivedFromLocalSource\": true,\n            \"addedToPoolAt\": \"2019-03-21T01:36:00.374Z\"\n        }\n    ]\n}\n"]]]
 [:heading {:level 2} [:text {} "EEA Methods"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The "]
   [:code {} [:text {} "EEA"]]
   [:text
    {}
    " API methods are not enabled by default for JSON-RPC. Use the "]
   [:link
    {:text "`--rpc-http-api`",
     :url "CLI/CLI-Syntax.md#rpc-http-api",
     :title ""}
    [:code {} [:text {} "--rpc-http-api"]]]
   [:soft-line-break {}]
   [:text {} "or "]
   [:link
    {:text "`--rpc-ws-api`",
     :url "CLI/CLI-Syntax.md#rpc-ws-api",
     :title ""}
    [:code {} [:text {} "--rpc-ws-api"]]]
   [:text {} " options to enable the "]
   [:code {} [:text {} "EEA"]]
   [:text {} " API methods."]]]
 [:heading {:level 3} [:text {} "eea_sendRawTransaction"]]
 [:paragraph
  {}
  [:text {} "Distributes the "]
  [:link
   {:text "private transaction",
    :url
    "../HowTo/Send-Transactions/Creating-Sending-Private-Transactions.md",
    :title ""}
   [:text {} "private transaction"]]
  [:text {} ","]
  [:soft-line-break {}]
  [:text {} "generates the "]
  [:link
   {:text "Privacy Marker Transaction",
    :url "../Concepts/Privacy/Private-Transaction-Processing.md",
    :title ""}
   [:text {} "Privacy Marker Transaction"]]
  [:text {} " and submits it to the transaction pool,"]
  [:soft-line-break {}]
  [:text {} "and returns the transaction hash of the "]
  [:link
   {:text "Privacy Marker Transaction",
    :url "../Concepts/Privacy/Private-Transaction-Processing.md",
    :title ""}
   [:text {} "Privacy Marker Transaction"]]
  [:text {} "."]]
 [:paragraph
  {}
  [:text
   {}
   "The signed transaction passed as an input parameter includes the "]
  [:code {} [:text {} "privateFrom"]]
  [:text {} ", "]
  [:link
   {:text "`privateFor` or `privacyGroupId`",
    :url
    "../HowTo/Send-Transactions/Creating-Sending-Private-Transactions.md#eea-compliant-or-besu-extended-privacy",
    :title ""}
   [:code {} [:text {} "privateFor"]]
   [:text {} " or "]
   [:code {} [:text {} "privacyGroupId"]]]
  [:text {} ","]
  [:soft-line-break {}]
  [:text {} "and "]
  [:code {} [:text {} "restriction"]]
  [:text {} " fields."]]
 [:paragraph
  {}
  [:text
   {}
   "To avoid exposing your private key, create signed transactions offline and send the signed transaction"]
  [:soft-line-break {}]
  [:text {} "data using "]
  [:code {} [:text {} "eea_sendRawTransaction"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "important"}
  [:paragraph
   {}
   [:text
    {}
    "For production systems requiring private transactions, we recommend using a network"]
   [:soft-line-break {}]
   [:text
    {}
    "with a consensus mechanism supporting transaction finality. For example, "]
   [:link
    {:text "IBFT 2.0",
     :url "../HowTo/Configure/Consensus-Protocols/IBFT.md",
     :title ""}
    [:text {} "IBFT 2.0"]]
   [:text {} "."]]
  [:paragraph
   {}
   [:text {} "Besu does not implement "]
   [:link
    {:text "`eea_sendTransaction`",
     :url "../HowTo/Send-Transactions/Account-Management.md",
     :title ""}
    [:code {} [:text {} "eea_sendTransaction"]]]
   [:text {} "."]]
  [:paragraph
   {}
   [:link
    {:text "EthSigner",
     :url "https://docs.ethsigner.pegasys.tech/en/latest/",
     :title ""}
    [:text {} "EthSigner"]]
   [:text {} " provides transaction signing and implements "]
   [:link
    {:text "`eea_sendTransaction`",
     :url
     "https://docs.ethsigner.pegasys.tech/en/latest/Using-EthSigner/Using-EthSigner/#eea_sendtransaction",
     :title ""}
    [:code {} [:text {} "eea_sendTransaction"]]]
   [:text {} "."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text
   {}
   " -  Signed RLP-encoded private transaction. For example:"]]
 [:paragraph
  {}
  [:code
   {}
   [:text
    {}
    "params: [\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"]"]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - 32-byte transaction hash of the "]
  [:link
   {:text "Privacy Marker Transaction",
    :url "../Concepts/Privacy/Private-Transaction-Processing.md",
    :title ""}
   [:text {} "Privacy Marker Transaction"]]]
 [:admonition-block
  {:title "", :info "tip"}
  [:paragraph
   {}
   [:text {} "If creating a contract, use "]
   [:link
    {:text "priv_getTransactionReceipt",
     :url "#priv_gettransactionreceipt",
     :title ""}
    [:text {} "priv_getTransactionReceipt"]]
   [:text {} " to retrieve the contract"]
   [:soft-line-break {}]
   [:text {} "address after the transaction is finalized."]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"eea_sendRawTransaction\",\"params\": [\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"eea_sendRawTransaction\",\"params\": [\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"id\":1,\n  \"jsonrpc\": \"2.0\",\n  \"result\": \"0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331\"\n}\n"]]]
 [:heading {:level 2} [:text {} "Priv Methods"]]
 [:admonition-block
  {:title "", :info "note"}
  [:paragraph
   {}
   [:text {} "The "]
   [:code {} [:text {} "PRIV"]]
   [:text
    {}
    " API methods are not enabled by default for JSON-RPC. Use the "]
   [:link
    {:text "`--rpc-http-api`",
     :url "CLI/CLI-Syntax.md#rpc-http-api",
     :title ""}
    [:code {} [:text {} "--rpc-http-api"]]]
   [:soft-line-break {}]
   [:text {} "or "]
   [:link
    {:text "`--rpc-ws-api`",
     :url "CLI/CLI-Syntax.md#rpc-ws-api",
     :title ""}
    [:code {} [:text {} "--rpc-ws-api"]]]
   [:text {} " options to enable the "]
   [:code {} [:text {} "PRIV"]]
   [:text {} " API methods."]]]
 [:heading {:level 3} [:text {} "priv_distributeRawTransaction"]]
 [:paragraph
  {}
  [:text {} "Distributes a signed, RLP encoded "]
  [:link
   {:text "private transaction",
    :url
    "../HowTo/Send-Transactions/Creating-Sending-Private-Transactions.md",
    :title ""}
   [:text {} "private transaction"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "tip"}
  [:paragraph
   {}
   [:text
    {}
    "If you want to sign the Privacy Marker Transaction outside of Besu, use "]
   [:link
    {:text "`priv_distributeRawTransaction`",
     :url
     "..//HowTo/Send-Transactions/Creating-Sending-Private-Transactions.md#priv_distributerawtransaction",
     :title ""}
    [:code {} [:text {} "priv_distributeRawTransaction"]]]
   [:soft-line-break {}]
   [:text {} "instead of "]
   [:link
    {:text "`eea_sendRawTransaction`",
     :url "#eea_sendrawtransaction",
     :title ""}
    [:code {} [:text {} "eea_sendRawTransaction"]]]
   [:text {} "."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text
   {}
   " -  Signed RLP-encoded private transaction. For example:"]]
 [:paragraph
  {}
  [:code
   {}
   [:text
    {}
    "params: [\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"]"]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text
   {}
   " - 32-byte enclave key. The enclave key is a pointer to the private transaction in "]
  [:link
   {:text "Orion", :url "https://docs.orion.pegasys.tech/", :title ""}
   [:text {} "Orion"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"priv_distributeRawTransaction\",\"params\": [\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"priv_distributeRawTransaction\",\"params\": [\"0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": \"0xfd0d90ab824574abc19c0776ca0210e764561d0ef6d621f2bbbea316eccfe56b\"\n}\n"]]]
 [:heading {:level 3} [:text {} "priv_getEeaTransactionCount"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the private transaction count for the specified account and "]
  [:link
   {:text "group of sender and recipients",
    :url "../Concepts/Privacy/Privacy-Groups.md#eea-compliant-privacy",
    :title ""}
   [:text {} "group of sender and recipients"]]
  [:text {} "."]]
 [:admonition-block
  {:title "", :info "important"}
  [:paragraph
   {}
   [:text
    {}
    "If sending more than 1 transaction to be mined in the same block (that is, you're not waiting for"]
   [:soft-line-break {}]
   [:text
    {}
    "the transaction receipt), you must calculate the private transaction nonce outside Besu."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Account address"]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Base64 encoded Orion address of the sender"]]
 [:paragraph
  {}
  [:code {} [:text {} "array of data"]]
  [:text {} " - Base64 encoded Orion addresses of recipients"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "quantity"]]
  [:text
   {}
   " - Integer representing the number of private transactions sent from the address to the specified group of sender and recipients."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"priv_getEeaTransactionCount\",\"params\":[\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\", \"GGilEkXLaQ9yhhtbpBT03Me9iYa7U/mWXxrJhnbl1XY=\", [\"KkOjNLmCI6r+mICrC6l+XuEDjFEzQllaMQMpWLl4y1s=\",\"eLb69r4K8/9WviwlfDiZ4jf97P9czyS3DkKu0QYGLjg=\"]], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"priv_getEeaTransactionCount\",\"params\":[\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\", \"GGilEkXLaQ9yhhtbpBT03Me9iYa7U/mWXxrJhnbl1XY=\", [\"KkOjNLmCI6r+mICrC6l+XuEDjFEzQllaMQMpWLl4y1s=\",\"eLb69r4K8/9WviwlfDiZ4jf97P9czyS3DkKu0QYGLjg=\"]], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": \"0x1\"\n}\n"]]]
 [:heading {:level 3} [:text {} "priv_getPrivacyPrecompileAddress"]]
 [:paragraph
  {}
  [:text {} "Returns the address of the "]
  [:link
   {:text "privacy precompiled contract",
    :url "../Concepts/Privacy/Private-Transaction-Processing.md",
    :title ""}
   [:text {} "privacy precompiled contract"]]
  [:text {} "."]
  [:soft-line-break {}]
  [:text {} "The address is specified by the "]
  [:link
   {:text "`--privacy-precompiled-address`",
    :url "CLI/CLI-Syntax.md#privacy-precompiled-address",
    :title ""}
   [:code {} [:text {} "--privacy-precompiled-address"]]]
  [:text {} " command line option."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "result"]]
  [:text {} " : "]
  [:code {} [:text {} "data"]]
  [:text {} " - Address of the privacy precompile"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"priv_getPrivacyPrecompileAddress\",\"params\":[], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"priv_getPrivacyPrecompileAddress\",\"params\":[], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": \"0x000000000000000000000000000000000000007e\"\n}\n"]]]
 [:heading {:level 3} [:text {} "priv_getPrivateTransaction"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the private transaction if you are a participant; otherwise, null."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Transaction hash returned by "]
  [:link
   {:text "`eea_sendRawTransaction`",
    :url "#eea_sendrawtransaction",
    :title ""}
   [:code {} [:text {} "eea_sendRawTransaction"]]]
  [:text {} " or"]
  [:soft-line-break {}]
  [:link
   {:text "`eea_sendTransction`",
    :url
    "https://docs.ethsigner.pegasys.tech/en/latest/Using-EthSigner/Using-EthSigner/#eea_sendtransaction",
    :title ""}
   [:code {} [:text {} "eea_sendTransction"]]]
  [:text {} ". ."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:text {} "Object - "]
  [:link
   {:text "Private transaction object",
    :url "API-Objects.md#private-transaction-object",
    :title ""}
   [:text {} "Private transaction object"]]
  [:text {} ", or "]
  [:code {} [:text {} "null"]]
  [:text {} " if not a participant in the private transaction."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"priv_getPrivateTransaction\",\"params\":[\"0x623c4ce5275a87b91f4f1c521012d39ca19311c787bde405490f4c0426a71498\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"priv_getPrivateTransaction\",\"params\":[\"0x623c4ce5275a87b91f4f1c521012d39ca19311c787bde405490f4c0426a71498\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"from\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\",\n        \"gas\": \"0x2dc6c0\",\n        \"gasPrice\": \"0x0\",\n        \"hash\": \"0x623c4ce5275a87b91f4f1c521012d39ca19311c787bde405490f4c0426a71498\",\n        \"input\": \"0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610221806100606000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633fa4f2451461005c5780636057361d1461008757806367e404ce146100b4575b600080fd5b34801561006857600080fd5b5061007161010b565b6040518082815260200191505060405180910390f35b34801561009357600080fd5b506100b260048036038101908080359060200190929190505050610115565b005b3480156100c057600080fd5b506100c96101cb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600254905090565b7fc9db20adedc6cf2b5d25252b101ab03e124902a73fcb12b753f3d1aaa2d8f9f53382604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a18060028190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a723058208efaf938851fb2d235f8bf9a9685f149129a30fe0f4b20a6c1885dc02f639eba0029\",\n        \"nonce\": \"0x0\",\n        \"to\": null,\n        \"value\": \"0x0\",\n        \"v\": \"0xfe8\",\n        \"r\": \"0x654a6a9663ca70bb13e27cca14b3777cc92da184e19a151cdeef2ccbbd5c6405\",\n        \"s\": \"0x5dd4667b020c8a5af7ae28d4c3126f8dcb1187f49dcf0de9d7a39b1651892eef\",\n        \"privateFrom\": \"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=\",\n        \"privateFor\": [\n            \"g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw=\"\n        ],\n        \"restriction\": \"restricted\"\n    }\n}\n"]]]
 [:heading {:level 3} [:text {} "priv_createPrivacyGroup"]]
 [:paragraph
  {}
  [:text
   {}
   "Creates a privacy group containing the specified members. Members are specified by their Orion public key."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "Object"]]
  [:text {} " - Request options:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "addresses"]]
    [:text {} ": "]
    [:code {} [:text {} "array of data"]]
    [:text {} " - Array of members specified by Orion public keys."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "name"]]
    [:text {} ": "]
    [:code {} [:text {} "string"]]
    [:text {} " - Privacy group name. Optional."]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "description"]]
    [:text {} ": "]
    [:code {} [:text {} "string"]]
    [:text {} " - Privacy group description. Optional."]]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph {} [:text {} "Privacy group ID"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\": \"priv_createPrivacyGroup\", \"params\": [{\"addresses\":[\"sTZpbQhcOfd9ZaFDnC00e/N2Ofv9p4/ZTBbEeVtXJ3E=\",\"quhb1pQPGN1w8ZSZSyiIfncEAlVY/M/rauSyQ5wVMRE=\"],\"name\":\"Group A\",\"description\":\"Description Group A\"}],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\": \"priv_createPrivacyGroup\", \"params\": [{\"addresses\":[\"sTZpbQhcOfd9ZaFDnC00e/N2Ofv9p4/ZTBbEeVtXJ3E=\",\"quhb1pQPGN1w8ZSZSyiIfncEAlVY/M/rauSyQ5wVMRE=\"],\"name\":\"Group A\",\"description\":\"Description Group A\"}],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": \"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk=\"\n}\n"]]]
 [:heading {:level 3} [:text {} "priv_deletePrivacyGroup"]]
 [:paragraph {} [:text {} "Deletes the specified privacy group."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Privacy group ID"]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"priv_deletePrivacyGroup\",\"params\":[\"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk=\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"priv_deletePrivacyGroup\",\"params\":[\"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk=\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 53,\n  \"result\": \"ewuTVoc5nlvWMwTFdRRK/wvV0dcyQo/Pauvx5bNEbTk=\"\n}\n"]]]
 [:heading {:level 3} [:text {} "priv_findPrivacyGroup"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns a list of privacy groups containing only the listed members. For example, if the listed members"]
  [:soft-line-break {}]
  [:text
   {}
   "are A and B, a privacy group containing A, B, and C is not returned."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "array of data"]]
  [:text {} " - Members specified by Orion public keys"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:text
   {}
   "Privacy groups containing only the specified members. Privacy groups are "]
  [:link
   {:text "EEA-compliant",
    :url "../Concepts/Privacy/Privacy-Groups.md#eea-compliant-privacy",
    :title ""}
   [:text {} "EEA-compliant"]]
  [:soft-line-break {}]
  [:text {} "or "]
  [:link
   {:text "Besu-extended",
    :url "../Concepts/Privacy/Privacy-Groups.md#besu-extended-privacy",
    :title ""}
   [:text {} "Besu-extended"]]
  [:text {} " with types:"]]
 [:bullet-list
  {}
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "LEGACY"]]
    [:text {} " for EEA-compliant groups"]]]
  [:bullet-list-item
   {}
   [:paragraph
    {}
    [:code {} [:text {} "BESU"]]
    [:text {} " for Besu-extended groups."]]]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\": \"2.0\",\"method\": \"priv_findPrivacyGroup\",\"params\": [[\"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=\", \"g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw=\"]],\"id\": 1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\": \"2.0\",\"method\": \"priv_findPrivacyGroup\",\"params\": [[\"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=\", \"g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw=\"]],\"id\": 1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n \"jsonrpc\": \"2.0\",\n \"id\": 1,\n \"result\": [\n   {\n     \"privacyGroupId\": \"GpK3ErNO0xF27T0sevgkJ3+4qk9Z+E3HtXYxcKIBKX8=\",\n     \"name\": \"Group B\",\n     \"description\": \"Description of Group B\",\n     \"type\": \"BESU\",\n     \"members\": [\n       \"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=\",\n       \"g59BmTeJIn7HIcnq8VQWgyh/pDbvbt2eyP0Ii60aDDw=\"\n     ]\n   }\n]\n}\n"]]]
 [:heading {:level 3} [:text {} "priv_getTransactionCount"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns the private transaction count for specified account and privacy group."]]
 [:admonition-block
  {:title "", :info "important"}
  [:paragraph
   {}
   [:text
    {}
    "If sending more than 1 transaction to be mined in the same block (that is, you're not waiting for"]
   [:soft-line-break {}]
   [:text
    {}
    "the transaction receipt), you must calculate the private transaction nonce outside Besu."]]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Account address"]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - Privacy group ID"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "quantity"]]
  [:text
   {}
   " - Integer representing the number of private transactions sent from the address to the specified privacy group."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"priv_getTransactionCount\",\"params\":[\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\", \"kAbelwaVW7okoEn1+okO+AbA4Hhz/7DaCOWVQz9nx5M=\"], \"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"priv_getTransactionCount\",\"params\":[\"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\", \"kAbelwaVW7okoEn1+okO+AbA4Hhz/7DaCOWVQz9nx5M=\"], \"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n  \"jsonrpc\": \"2.0\",\n  \"id\": 1,\n  \"result\": \"0x1\"\n}\n"]]]
 [:heading {:level 3} [:text {} "priv_getTransactionReceipt"]]
 [:paragraph
  {}
  [:text
   {}
   "Returns information about the private transaction after the transaction was mined. Receipts for pending transactions are not available."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph
  {}
  [:code {} [:text {} "data"]]
  [:text {} " - 32-byte hash of a transaction."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph
  {}
  [:code {} [:text {} "Object"]]
  [:text {} " - "]
  [:link
   {:text "Private Transaction receipt object",
    :url "API-Objects.md#private-transaction-receipt-object",
    :title ""}
   [:text {} "Private Transaction receipt object"]]
  [:text {} ", or "]
  [:code {} [:text {} "null"]]
  [:text {} " if no receipt found."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"priv_getTransactionReceipt\",\"params\":[\"0xf3ab9693ad92e277bf785e1772f29fb1864904bbbe87b0470455ddb082caab9d\"],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"priv_getTransactionReceipt\",\"params\":[\"0xf3ab9693ad92e277bf785e1772f29fb1864904bbbe87b0470455ddb082caab9d\"],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"contractAddress\": \"0x493b76031593402e24e16faa81f677b58e2d53f3\",\n        \"from\": \"0xfe3b557e8fb62b89f4916b721be55ceb828dbd73\",\n        \"output\": \"0x6080604052600436106049576000357c010000000000000000000000000000000000000000000\n        0000000000000900463ffffffff1680633fa4f24514604e57806355241077146076575b600080fd5b3480156059\n        57600080fd5b50606060a0565b6040518082815260200191505060405180910390f35b348015608157600080fd5b\n        50609e6004803603810190808035906020019092919050505060a6565b005b60005481565b8060008190555050560\n        0a165627a7a723058202bdbba2e694dba8fff33d9d0976df580f57bff0a40e25a46c398f8063b4c00360029\",\n        \"commitmentHash\": \"0x79b9e6b0856db398ad7dc208f15b1d38c0c0b0c5f99e4a443a2c5a85510e96a5\",\n        \"transactionHash\": \"0x36219e92b5f53d4150aa9ef7d2d793118cced523de6724100da5b534e3ceb4b8\",\n        \"privateFrom\": \"negmDcN2P4ODpqn/6WkJ02zT/0w0bjhGpkZ8UP6vARk=\",\n        \"privacyGroupId\": \"cD636RZlcqVSpoxT/ExbkWQfBO7kPAZO0QlWHErNSL8=\",\n        \"status\": \"0x1\",\n        \"logs\": []\n    }\n}\n"]]]
 [:heading {:level 2} [:text {} "Miscellaneous Methods"]]
 [:heading {:level 3} [:text {} "rpc_modules"]]
 [:paragraph
  {}
  [:text {} "Lists "]
  [:link
   {:text "enabled APIs",
    :url
    "../HowTo/Interact/APIs/Using-JSON-RPC-API.md#api-methods-enabled-by-default",
    :title ""}
   [:text {} "enabled APIs"]]
  [:text {} " and the version of each."]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Parameters"]]]
 [:paragraph {} [:text {} "None"]]
 [:paragraph {} [:strong-emphasis {} [:text {} "Returns"]]]
 [:paragraph {} [:text {} "Enabled APIs."]]
 [:admonition-block
  {:title "", :info "example"}
  [:fenced-code-block
   {}
   [:text
    {}
    "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"rpc_modules\",\"params\":[],\"id\":1}' http://127.0.0.1:8545\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\"jsonrpc\":\"2.0\",\"method\":\"rpc_modules\",\"params\":[],\"id\":1}\n"]]
  [:fenced-code-block
   {}
   [:text
    {}
    "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 1,\n    \"result\": {\n        \"web3\": \"1.0\",\n        \"eth\": \"1.0\",\n        \"net\": \"1.0\"\n    }\n}"]]]]
